/*
 * Copyright (C) 2019 Zilliqa
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: message.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ByteArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3,oneof" json:"data,omitempty"`
}

func (x *ByteArray) Reset() {
	*x = ByteArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByteArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByteArray) ProtoMessage() {}

func (x *ByteArray) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByteArray.ProtoReflect.Descriptor instead.
func (*ByteArray) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

func (x *ByteArray) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProtoTransactionCoreInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version      *uint32    `protobuf:"varint,1,opt,name=version,proto3,oneof" json:"version,omitempty"`
	Nonce        *uint64    `protobuf:"varint,2,opt,name=nonce,proto3,oneof" json:"nonce,omitempty"`
	Toaddr       []byte     `protobuf:"bytes,3,opt,name=toaddr,proto3,oneof" json:"toaddr,omitempty"`
	Senderpubkey *ByteArray `protobuf:"bytes,4,opt,name=senderpubkey,proto3,oneof" json:"senderpubkey,omitempty"`
	Amount       *ByteArray `protobuf:"bytes,5,opt,name=amount,proto3,oneof" json:"amount,omitempty"`
	Gasprice     *ByteArray `protobuf:"bytes,6,opt,name=gasprice,proto3,oneof" json:"gasprice,omitempty"`
	Gaslimit     *uint64    `protobuf:"varint,7,opt,name=gaslimit,proto3,oneof" json:"gaslimit,omitempty"`
	Code         []byte     `protobuf:"bytes,8,opt,name=code,proto3,oneof" json:"code,omitempty"`
	Data         []byte     `protobuf:"bytes,9,opt,name=data,proto3,oneof" json:"data,omitempty"`
}

func (x *ProtoTransactionCoreInfo) Reset() {
	*x = ProtoTransactionCoreInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTransactionCoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTransactionCoreInfo) ProtoMessage() {}

func (x *ProtoTransactionCoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTransactionCoreInfo.ProtoReflect.Descriptor instead.
func (*ProtoTransactionCoreInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1}
}

func (x *ProtoTransactionCoreInfo) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *ProtoTransactionCoreInfo) GetNonce() uint64 {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return 0
}

func (x *ProtoTransactionCoreInfo) GetToaddr() []byte {
	if x != nil {
		return x.Toaddr
	}
	return nil
}

func (x *ProtoTransactionCoreInfo) GetSenderpubkey() *ByteArray {
	if x != nil {
		return x.Senderpubkey
	}
	return nil
}

func (x *ProtoTransactionCoreInfo) GetAmount() *ByteArray {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *ProtoTransactionCoreInfo) GetGasprice() *ByteArray {
	if x != nil {
		return x.Gasprice
	}
	return nil
}

func (x *ProtoTransactionCoreInfo) GetGaslimit() uint64 {
	if x != nil && x.Gaslimit != nil {
		return *x.Gaslimit
	}
	return 0
}

func (x *ProtoTransactionCoreInfo) GetCode() []byte {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *ProtoTransactionCoreInfo) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProtoTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tranid    []byte                    `protobuf:"bytes,1,opt,name=tranid,proto3,oneof" json:"tranid,omitempty"`
	Info      *ProtoTransactionCoreInfo `protobuf:"bytes,2,opt,name=info,proto3,oneof" json:"info,omitempty"`
	Signature *ByteArray                `protobuf:"bytes,3,opt,name=signature,proto3,oneof" json:"signature,omitempty"`
}

func (x *ProtoTransaction) Reset() {
	*x = ProtoTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTransaction) ProtoMessage() {}

func (x *ProtoTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTransaction.ProtoReflect.Descriptor instead.
func (*ProtoTransaction) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2}
}

func (x *ProtoTransaction) GetTranid() []byte {
	if x != nil {
		return x.Tranid
	}
	return nil
}

func (x *ProtoTransaction) GetInfo() *ProtoTransactionCoreInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ProtoTransaction) GetSignature() *ByteArray {
	if x != nil {
		return x.Signature
	}
	return nil
}

type ProtoTransactionReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receipt []byte  `protobuf:"bytes,1,opt,name=receipt,proto3,oneof" json:"receipt,omitempty"`
	Cumgas  *uint64 `protobuf:"varint,2,opt,name=cumgas,proto3,oneof" json:"cumgas,omitempty"`
}

func (x *ProtoTransactionReceipt) Reset() {
	*x = ProtoTransactionReceipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTransactionReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTransactionReceipt) ProtoMessage() {}

func (x *ProtoTransactionReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTransactionReceipt.ProtoReflect.Descriptor instead.
func (*ProtoTransactionReceipt) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{3}
}

func (x *ProtoTransactionReceipt) GetReceipt() []byte {
	if x != nil {
		return x.Receipt
	}
	return nil
}

func (x *ProtoTransactionReceipt) GetCumgas() uint64 {
	if x != nil && x.Cumgas != nil {
		return *x.Cumgas
	}
	return 0
}

type ProtoTransactionWithReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction *ProtoTransaction        `protobuf:"bytes,1,opt,name=transaction,proto3,oneof" json:"transaction,omitempty"`
	Receipt     *ProtoTransactionReceipt `protobuf:"bytes,2,opt,name=receipt,proto3,oneof" json:"receipt,omitempty"`
}

func (x *ProtoTransactionWithReceipt) Reset() {
	*x = ProtoTransactionWithReceipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTransactionWithReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTransactionWithReceipt) ProtoMessage() {}

func (x *ProtoTransactionWithReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTransactionWithReceipt.ProtoReflect.Descriptor instead.
func (*ProtoTransactionWithReceipt) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{4}
}

func (x *ProtoTransactionWithReceipt) GetTransaction() *ProtoTransaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *ProtoTransactionWithReceipt) GetReceipt() *ProtoTransactionReceipt {
	if x != nil {
		return x.Receipt
	}
	return nil
}

type ProtoAccountBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version     *uint32    `protobuf:"varint,1,opt,name=version,proto3,oneof" json:"version,omitempty"`
	Balance     *ByteArray `protobuf:"bytes,2,opt,name=balance,proto3,oneof" json:"balance,omitempty"`
	Nonce       *uint64    `protobuf:"varint,3,opt,name=nonce,proto3,oneof" json:"nonce,omitempty"`
	Codehash    []byte     `protobuf:"bytes,4,opt,name=codehash,proto3,oneof" json:"codehash,omitempty"`
	Storageroot []byte     `protobuf:"bytes,5,opt,name=storageroot,proto3,oneof" json:"storageroot,omitempty"`
}

func (x *ProtoAccountBase) Reset() {
	*x = ProtoAccountBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoAccountBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoAccountBase) ProtoMessage() {}

func (x *ProtoAccountBase) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoAccountBase.ProtoReflect.Descriptor instead.
func (*ProtoAccountBase) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{5}
}

func (x *ProtoAccountBase) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *ProtoAccountBase) GetBalance() *ByteArray {
	if x != nil {
		return x.Balance
	}
	return nil
}

func (x *ProtoAccountBase) GetNonce() uint64 {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return 0
}

func (x *ProtoAccountBase) GetCodehash() []byte {
	if x != nil {
		return x.Codehash
	}
	return nil
}

func (x *ProtoAccountBase) GetStorageroot() []byte {
	if x != nil {
		return x.Storageroot
	}
	return nil
}

// Used in databases "dsBlocks", "microBlocks", "txBlocks", "VCBlocks"
type ProtoBlockBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blockhash []byte                       `protobuf:"bytes,1,opt,name=blockhash,proto3" json:"blockhash,omitempty"`  // Added in: v1.0, Deprecated in: N/A
	Cosigs    *ProtoBlockBase_CoSignatures `protobuf:"bytes,2,opt,name=cosigs,proto3" json:"cosigs,omitempty"`        // Added in: v1.0, Deprecated in: N/A
	Timestamp uint64                       `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // Added in: v1.0, Deprecated in: N/A
}

func (x *ProtoBlockBase) Reset() {
	*x = ProtoBlockBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoBlockBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoBlockBase) ProtoMessage() {}

func (x *ProtoBlockBase) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoBlockBase.ProtoReflect.Descriptor instead.
func (*ProtoBlockBase) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6}
}

func (x *ProtoBlockBase) GetBlockhash() []byte {
	if x != nil {
		return x.Blockhash
	}
	return nil
}

func (x *ProtoBlockBase) GetCosigs() *ProtoBlockBase_CoSignatures {
	if x != nil {
		return x.Cosigs
	}
	return nil
}

func (x *ProtoBlockBase) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Used in "dsBlockHeader", "microBlockHeader", "txBlockHeader", and "VCBlockHeader"
type ProtoBlockHeaderBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version       uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`            // Added in: v1.0, Deprecated in: N/A
	Committeehash []byte `protobuf:"bytes,2,opt,name=committeehash,proto3" json:"committeehash,omitempty"` // Added in: v1.0, Deprecated in: N/A
	Prevhash      []byte `protobuf:"bytes,3,opt,name=prevhash,proto3" json:"prevhash,omitempty"`           // Added in: v1.0, Deprecated in: N/A
}

func (x *ProtoBlockHeaderBase) Reset() {
	*x = ProtoBlockHeaderBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoBlockHeaderBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoBlockHeaderBase) ProtoMessage() {}

func (x *ProtoBlockHeaderBase) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoBlockHeaderBase.ProtoReflect.Descriptor instead.
func (*ProtoBlockHeaderBase) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{7}
}

func (x *ProtoBlockHeaderBase) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ProtoBlockHeaderBase) GetCommitteehash() []byte {
	if x != nil {
		return x.Committeehash
	}
	return nil
}

func (x *ProtoBlockHeaderBase) GetPrevhash() []byte {
	if x != nil {
		return x.Prevhash
	}
	return nil
}

// Used in database "dsBlocks"
type ProtoDSBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header    *ProtoDSBlock_DSBlockHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`       // Added in: v1.0, Deprecated in: N/A
	Blockbase *ProtoBlockBase             `protobuf:"bytes,2,opt,name=blockbase,proto3" json:"blockbase,omitempty"` // Added in: v1.0, Deprecated in: N/A
}

func (x *ProtoDSBlock) Reset() {
	*x = ProtoDSBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoDSBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoDSBlock) ProtoMessage() {}

func (x *ProtoDSBlock) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoDSBlock.ProtoReflect.Descriptor instead.
func (*ProtoDSBlock) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8}
}

func (x *ProtoDSBlock) GetHeader() *ProtoDSBlock_DSBlockHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ProtoDSBlock) GetBlockbase() *ProtoBlockBase {
	if x != nil {
		return x.Blockbase
	}
	return nil
}

// Used in database "txBlocks"
type ProtoMbInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mbhash []byte `protobuf:"bytes,1,opt,name=mbhash,proto3" json:"mbhash,omitempty"` // Added in: v1.0, Deprecated in: N/A
	Txroot []byte `protobuf:"bytes,2,opt,name=txroot,proto3" json:"txroot,omitempty"` // Added in: v1.0, Deprecated in: N/A
	// Types that are assignable to Oneof3:
	//	*ProtoMbInfo_Shardid
	Oneof3 isProtoMbInfo_Oneof3 `protobuf_oneof:"oneof3"`
}

func (x *ProtoMbInfo) Reset() {
	*x = ProtoMbInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoMbInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoMbInfo) ProtoMessage() {}

func (x *ProtoMbInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoMbInfo.ProtoReflect.Descriptor instead.
func (*ProtoMbInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{9}
}

func (x *ProtoMbInfo) GetMbhash() []byte {
	if x != nil {
		return x.Mbhash
	}
	return nil
}

func (x *ProtoMbInfo) GetTxroot() []byte {
	if x != nil {
		return x.Txroot
	}
	return nil
}

func (m *ProtoMbInfo) GetOneof3() isProtoMbInfo_Oneof3 {
	if m != nil {
		return m.Oneof3
	}
	return nil
}

func (x *ProtoMbInfo) GetShardid() uint32 {
	if x, ok := x.GetOneof3().(*ProtoMbInfo_Shardid); ok {
		return x.Shardid
	}
	return 0
}

type isProtoMbInfo_Oneof3 interface {
	isProtoMbInfo_Oneof3()
}

type ProtoMbInfo_Shardid struct {
	Shardid uint32 `protobuf:"varint,3,opt,name=shardid,proto3,oneof"`
}

func (*ProtoMbInfo_Shardid) isProtoMbInfo_Oneof3() {}

// Used in database "txBlocks"
type ProtoTxBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header    *ProtoTxBlock_TxBlockHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`       // Added in: v1.0, Deprecated in: N/A
	Mbinfos   []*ProtoMbInfo              `protobuf:"bytes,2,rep,name=mbinfos,proto3" json:"mbinfos,omitempty"`     // Added in: v1.0, Deprecated in: N/A
	Blockbase *ProtoBlockBase             `protobuf:"bytes,3,opt,name=blockbase,proto3" json:"blockbase,omitempty"` // Added in: v1.0, Deprecated in: N/A
}

func (x *ProtoTxBlock) Reset() {
	*x = ProtoTxBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTxBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTxBlock) ProtoMessage() {}

func (x *ProtoTxBlock) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTxBlock.ProtoReflect.Descriptor instead.
func (*ProtoTxBlock) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{10}
}

func (x *ProtoTxBlock) GetHeader() *ProtoTxBlock_TxBlockHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ProtoTxBlock) GetMbinfos() []*ProtoMbInfo {
	if x != nil {
		return x.Mbinfos
	}
	return nil
}

func (x *ProtoTxBlock) GetBlockbase() *ProtoBlockBase {
	if x != nil {
		return x.Blockbase
	}
	return nil
}

type ProtoBlockBase_CoSignatures struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cs1 *ByteArray `protobuf:"bytes,1,opt,name=cs1,proto3" json:"cs1,omitempty"`       // Added in: v1.0, Deprecated in: N/A
	B1  []bool     `protobuf:"varint,2,rep,packed,name=b1,proto3" json:"b1,omitempty"` // Added in: v1.0, Deprecated in: N/A
	Cs2 *ByteArray `protobuf:"bytes,3,opt,name=cs2,proto3" json:"cs2,omitempty"`       // Added in: v1.0, Deprecated in: N/A
	B2  []bool     `protobuf:"varint,4,rep,packed,name=b2,proto3" json:"b2,omitempty"` // Added in: v1.0, Deprecated in: N/A
}

func (x *ProtoBlockBase_CoSignatures) Reset() {
	*x = ProtoBlockBase_CoSignatures{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoBlockBase_CoSignatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoBlockBase_CoSignatures) ProtoMessage() {}

func (x *ProtoBlockBase_CoSignatures) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoBlockBase_CoSignatures.ProtoReflect.Descriptor instead.
func (*ProtoBlockBase_CoSignatures) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 0}
}

func (x *ProtoBlockBase_CoSignatures) GetCs1() *ByteArray {
	if x != nil {
		return x.Cs1
	}
	return nil
}

func (x *ProtoBlockBase_CoSignatures) GetB1() []bool {
	if x != nil {
		return x.B1
	}
	return nil
}

func (x *ProtoBlockBase_CoSignatures) GetCs2() *ByteArray {
	if x != nil {
		return x.Cs2
	}
	return nil
}

func (x *ProtoBlockBase_CoSignatures) GetB2() []bool {
	if x != nil {
		return x.B2
	}
	return nil
}

type ProtoDSBlock_DSBlockHashSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shardinghash  []byte `protobuf:"bytes,1,opt,name=shardinghash,proto3" json:"shardinghash,omitempty"`   // Added in: v1.0, Deprecated in: N/A
	Reservedfield []byte `protobuf:"bytes,2,opt,name=reservedfield,proto3" json:"reservedfield,omitempty"` // Added in: v1.0, Deprecated in: N/A
}

func (x *ProtoDSBlock_DSBlockHashSet) Reset() {
	*x = ProtoDSBlock_DSBlockHashSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoDSBlock_DSBlockHashSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoDSBlock_DSBlockHashSet) ProtoMessage() {}

func (x *ProtoDSBlock_DSBlockHashSet) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoDSBlock_DSBlockHashSet.ProtoReflect.Descriptor instead.
func (*ProtoDSBlock_DSBlockHashSet) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ProtoDSBlock_DSBlockHashSet) GetShardinghash() []byte {
	if x != nil {
		return x.Shardinghash
	}
	return nil
}

func (x *ProtoDSBlock_DSBlockHashSet) GetReservedfield() []byte {
	if x != nil {
		return x.Reservedfield
	}
	return nil
}

type ProtoDSBlock_DSBlockHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blockheaderbase *ProtoBlockHeaderBase                      `protobuf:"bytes,1,opt,name=blockheaderbase,proto3" json:"blockheaderbase,omitempty"` // Added in: v1.0, Deprecated in: N/A
	Dsdifficulty    uint32                                     `protobuf:"varint,2,opt,name=dsdifficulty,proto3" json:"dsdifficulty,omitempty"`      // Added in: v1.0, Deprecated in: N/A, Only LSB used
	Difficulty      uint32                                     `protobuf:"varint,3,opt,name=difficulty,proto3" json:"difficulty,omitempty"`          // Added in: v1.0, Deprecated in: N/A, Only LSB used
	Prevhash        []byte                                     `protobuf:"bytes,4,opt,name=prevhash,proto3" json:"prevhash,omitempty"`               // Added in: v1.0, Deprecated in: N/A, 32 bytes
	Leaderpubkey    *ByteArray                                 `protobuf:"bytes,5,opt,name=leaderpubkey,proto3" json:"leaderpubkey,omitempty"`       // Added in: v1.0, Deprecated in: N/A
	Blocknum        uint64                                     `protobuf:"varint,6,opt,name=blocknum,proto3" json:"blocknum,omitempty"`              // Added in: v1.0, Deprecated in: N/A
	Epochnum        uint64                                     `protobuf:"varint,7,opt,name=epochnum,proto3" json:"epochnum,omitempty"`              // Added in: v1.0, Deprecated in: N/A
	Gasprice        *ByteArray                                 `protobuf:"bytes,8,opt,name=gasprice,proto3" json:"gasprice,omitempty"`               // Added in: v1.0, Deprecated in: N/A
	Swinfo          *ByteArray                                 `protobuf:"bytes,9,opt,name=swinfo,proto3" json:"swinfo,omitempty"`                   // Added in: v1.0, Deprecated in: N/A
	Dswinners       []*ProtoDSBlock_DSBlockHeader_PowDSWinners `protobuf:"bytes,10,rep,name=dswinners,proto3" json:"dswinners,omitempty"`            // Added in: v1.0, Deprecated in: N/A
	Hash            *ProtoDSBlock_DSBlockHashSet               `protobuf:"bytes,11,opt,name=hash,proto3" json:"hash,omitempty"`                      // Added in: v1.0, Deprecated in: N/A
	Dsremoved       []*ByteArray                               `protobuf:"bytes,12,rep,name=dsremoved,proto3" json:"dsremoved,omitempty"`            // Added in: v2.0, Deprecated in: N/A
	Proposals       []*ProtoDSBlock_DSBlockHeader_Proposal     `protobuf:"bytes,13,rep,name=proposals,proto3" json:"proposals,omitempty"`
}

func (x *ProtoDSBlock_DSBlockHeader) Reset() {
	*x = ProtoDSBlock_DSBlockHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoDSBlock_DSBlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoDSBlock_DSBlockHeader) ProtoMessage() {}

func (x *ProtoDSBlock_DSBlockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoDSBlock_DSBlockHeader.ProtoReflect.Descriptor instead.
func (*ProtoDSBlock_DSBlockHeader) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1}
}

func (x *ProtoDSBlock_DSBlockHeader) GetBlockheaderbase() *ProtoBlockHeaderBase {
	if x != nil {
		return x.Blockheaderbase
	}
	return nil
}

func (x *ProtoDSBlock_DSBlockHeader) GetDsdifficulty() uint32 {
	if x != nil {
		return x.Dsdifficulty
	}
	return 0
}

func (x *ProtoDSBlock_DSBlockHeader) GetDifficulty() uint32 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

func (x *ProtoDSBlock_DSBlockHeader) GetPrevhash() []byte {
	if x != nil {
		return x.Prevhash
	}
	return nil
}

func (x *ProtoDSBlock_DSBlockHeader) GetLeaderpubkey() *ByteArray {
	if x != nil {
		return x.Leaderpubkey
	}
	return nil
}

func (x *ProtoDSBlock_DSBlockHeader) GetBlocknum() uint64 {
	if x != nil {
		return x.Blocknum
	}
	return 0
}

func (x *ProtoDSBlock_DSBlockHeader) GetEpochnum() uint64 {
	if x != nil {
		return x.Epochnum
	}
	return 0
}

func (x *ProtoDSBlock_DSBlockHeader) GetGasprice() *ByteArray {
	if x != nil {
		return x.Gasprice
	}
	return nil
}

func (x *ProtoDSBlock_DSBlockHeader) GetSwinfo() *ByteArray {
	if x != nil {
		return x.Swinfo
	}
	return nil
}

func (x *ProtoDSBlock_DSBlockHeader) GetDswinners() []*ProtoDSBlock_DSBlockHeader_PowDSWinners {
	if x != nil {
		return x.Dswinners
	}
	return nil
}

func (x *ProtoDSBlock_DSBlockHeader) GetHash() *ProtoDSBlock_DSBlockHashSet {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *ProtoDSBlock_DSBlockHeader) GetDsremoved() []*ByteArray {
	if x != nil {
		return x.Dsremoved
	}
	return nil
}

func (x *ProtoDSBlock_DSBlockHeader) GetProposals() []*ProtoDSBlock_DSBlockHeader_Proposal {
	if x != nil {
		return x.Proposals
	}
	return nil
}

type ProtoDSBlock_DSBlockHeader_PowDSWinners struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key *ByteArray `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"` // Added in: v1.0, Deprecated in: N/A
	Val *ByteArray `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"` // Added in: v1.0, Deprecated in: N/A
}

func (x *ProtoDSBlock_DSBlockHeader_PowDSWinners) Reset() {
	*x = ProtoDSBlock_DSBlockHeader_PowDSWinners{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoDSBlock_DSBlockHeader_PowDSWinners) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoDSBlock_DSBlockHeader_PowDSWinners) ProtoMessage() {}

func (x *ProtoDSBlock_DSBlockHeader_PowDSWinners) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoDSBlock_DSBlockHeader_PowDSWinners.ProtoReflect.Descriptor instead.
func (*ProtoDSBlock_DSBlockHeader_PowDSWinners) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 0}
}

func (x *ProtoDSBlock_DSBlockHeader_PowDSWinners) GetKey() *ByteArray {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ProtoDSBlock_DSBlockHeader_PowDSWinners) GetVal() *ByteArray {
	if x != nil {
		return x.Val
	}
	return nil
}

// Add new members here
type ProtoDSBlock_DSBlockHeader_Vote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value uint32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ProtoDSBlock_DSBlockHeader_Vote) Reset() {
	*x = ProtoDSBlock_DSBlockHeader_Vote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoDSBlock_DSBlockHeader_Vote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoDSBlock_DSBlockHeader_Vote) ProtoMessage() {}

func (x *ProtoDSBlock_DSBlockHeader_Vote) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoDSBlock_DSBlockHeader_Vote.ProtoReflect.Descriptor instead.
func (*ProtoDSBlock_DSBlockHeader_Vote) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 1}
}

func (x *ProtoDSBlock_DSBlockHeader_Vote) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *ProtoDSBlock_DSBlockHeader_Vote) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ProtoDSBlock_DSBlockHeader_Proposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proposalid uint32                             `protobuf:"varint,1,opt,name=proposalid,proto3" json:"proposalid,omitempty"`
	Dsvotes    []*ProtoDSBlock_DSBlockHeader_Vote `protobuf:"bytes,2,rep,name=dsvotes,proto3" json:"dsvotes,omitempty"`
	Minervotes []*ProtoDSBlock_DSBlockHeader_Vote `protobuf:"bytes,3,rep,name=minervotes,proto3" json:"minervotes,omitempty"`
}

func (x *ProtoDSBlock_DSBlockHeader_Proposal) Reset() {
	*x = ProtoDSBlock_DSBlockHeader_Proposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoDSBlock_DSBlockHeader_Proposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoDSBlock_DSBlockHeader_Proposal) ProtoMessage() {}

func (x *ProtoDSBlock_DSBlockHeader_Proposal) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoDSBlock_DSBlockHeader_Proposal.ProtoReflect.Descriptor instead.
func (*ProtoDSBlock_DSBlockHeader_Proposal) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 2}
}

func (x *ProtoDSBlock_DSBlockHeader_Proposal) GetProposalid() uint32 {
	if x != nil {
		return x.Proposalid
	}
	return 0
}

func (x *ProtoDSBlock_DSBlockHeader_Proposal) GetDsvotes() []*ProtoDSBlock_DSBlockHeader_Vote {
	if x != nil {
		return x.Dsvotes
	}
	return nil
}

func (x *ProtoDSBlock_DSBlockHeader_Proposal) GetMinervotes() []*ProtoDSBlock_DSBlockHeader_Vote {
	if x != nil {
		return x.Minervotes
	}
	return nil
}

type ProtoTxBlock_TxBlockHashSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stateroothash  []byte `protobuf:"bytes,1,opt,name=stateroothash,proto3" json:"stateroothash,omitempty"`   // Added in: v1.0, Deprecated in: N/A
	Statedeltahash []byte `protobuf:"bytes,2,opt,name=statedeltahash,proto3" json:"statedeltahash,omitempty"` // Added in: v1.0, Deprecated in: N/A
	Mbinfohash     []byte `protobuf:"bytes,3,opt,name=mbinfohash,proto3" json:"mbinfohash,omitempty"`         // Added in: v1.0, Deprecated in: N/A
}

func (x *ProtoTxBlock_TxBlockHashSet) Reset() {
	*x = ProtoTxBlock_TxBlockHashSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTxBlock_TxBlockHashSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTxBlock_TxBlockHashSet) ProtoMessage() {}

func (x *ProtoTxBlock_TxBlockHashSet) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTxBlock_TxBlockHashSet.ProtoReflect.Descriptor instead.
func (*ProtoTxBlock_TxBlockHashSet) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{10, 0}
}

func (x *ProtoTxBlock_TxBlockHashSet) GetStateroothash() []byte {
	if x != nil {
		return x.Stateroothash
	}
	return nil
}

func (x *ProtoTxBlock_TxBlockHashSet) GetStatedeltahash() []byte {
	if x != nil {
		return x.Statedeltahash
	}
	return nil
}

func (x *ProtoTxBlock_TxBlockHashSet) GetMbinfohash() []byte {
	if x != nil {
		return x.Mbinfohash
	}
	return nil
}

type ProtoTxBlock_TxBlockHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blockheaderbase *ProtoBlockHeaderBase        `protobuf:"bytes,1,opt,name=blockheaderbase,proto3" json:"blockheaderbase,omitempty"` // Added in: v1.0, Deprecated in: N/A
	Gaslimit        uint64                       `protobuf:"varint,2,opt,name=gaslimit,proto3" json:"gaslimit,omitempty"`              // Added in: v1.0, Deprecated in: N/A
	Gasused         *uint64                      `protobuf:"varint,3,opt,name=gasused,proto3,oneof" json:"gasused,omitempty"`          // Added in: v1.0, Deprecated in: N/A
	Rewards         *ByteArray                   `protobuf:"bytes,4,opt,name=rewards,proto3" json:"rewards,omitempty"`                 // Added in: v1.0, Deprecated in: N/A
	Prevhash        []byte                       `protobuf:"bytes,5,opt,name=prevhash,proto3" json:"prevhash,omitempty"`               // Added in: v1.0, Deprecated in: N/A
	Blocknum        uint64                       `protobuf:"varint,6,opt,name=blocknum,proto3" json:"blocknum,omitempty"`              // Added in: v1.0, Deprecated in: N/A
	Hash            *ProtoTxBlock_TxBlockHashSet `protobuf:"bytes,7,opt,name=hash,proto3" json:"hash,omitempty"`                       // Added in: v1.0, Deprecated in: N/A
	Numtxs          *uint32                      `protobuf:"varint,8,opt,name=numtxs,proto3,oneof" json:"numtxs,omitempty"`            // Added in: v1.0, Deprecated in: N/A
	Minerpubkey     *ByteArray                   `protobuf:"bytes,9,opt,name=minerpubkey,proto3" json:"minerpubkey,omitempty"`         // Added in: v1.0, Deprecated in: N/A
	Dsblocknum      uint64                       `protobuf:"varint,10,opt,name=dsblocknum,proto3" json:"dsblocknum,omitempty"`         // Added in: v1.0, Deprecated in: N/A
}

func (x *ProtoTxBlock_TxBlockHeader) Reset() {
	*x = ProtoTxBlock_TxBlockHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTxBlock_TxBlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTxBlock_TxBlockHeader) ProtoMessage() {}

func (x *ProtoTxBlock_TxBlockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTxBlock_TxBlockHeader.ProtoReflect.Descriptor instead.
func (*ProtoTxBlock_TxBlockHeader) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{10, 1}
}

func (x *ProtoTxBlock_TxBlockHeader) GetBlockheaderbase() *ProtoBlockHeaderBase {
	if x != nil {
		return x.Blockheaderbase
	}
	return nil
}

func (x *ProtoTxBlock_TxBlockHeader) GetGaslimit() uint64 {
	if x != nil {
		return x.Gaslimit
	}
	return 0
}

func (x *ProtoTxBlock_TxBlockHeader) GetGasused() uint64 {
	if x != nil && x.Gasused != nil {
		return *x.Gasused
	}
	return 0
}

func (x *ProtoTxBlock_TxBlockHeader) GetRewards() *ByteArray {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *ProtoTxBlock_TxBlockHeader) GetPrevhash() []byte {
	if x != nil {
		return x.Prevhash
	}
	return nil
}

func (x *ProtoTxBlock_TxBlockHeader) GetBlocknum() uint64 {
	if x != nil {
		return x.Blocknum
	}
	return 0
}

func (x *ProtoTxBlock_TxBlockHeader) GetHash() *ProtoTxBlock_TxBlockHashSet {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *ProtoTxBlock_TxBlockHeader) GetNumtxs() uint32 {
	if x != nil && x.Numtxs != nil {
		return *x.Numtxs
	}
	return 0
}

func (x *ProtoTxBlock_TxBlockHeader) GetMinerpubkey() *ByteArray {
	if x != nil {
		return x.Minerpubkey
	}
	return nil
}

func (x *ProtoTxBlock_TxBlockHeader) GetDsblocknum() uint64 {
	if x != nil {
		return x.Dsblocknum
	}
	return 0
}

var File_message_proto protoreflect.FileDescriptor

var file_message_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x2d, 0x0a, 0x09, 0x42, 0x79, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x17, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe5,
	0x03, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x05, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x74, 0x6f, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x02, 0x52, 0x06, 0x74, 0x6f, 0x61, 0x64, 0x64, 0x72, 0x88,
	0x01, 0x01, 0x12, 0x42, 0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x70, 0x75, 0x62, 0x6b,
	0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69,
	0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x41, 0x72,
	0x72, 0x61, 0x79, 0x48, 0x03, 0x52, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x70, 0x75, 0x62,
	0x6b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61,
	0x79, 0x48, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x3a,
	0x0a, 0x08, 0x67, 0x61, 0x73, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x48, 0x05, 0x52, 0x08, 0x67,
	0x61, 0x73, 0x70, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x67, 0x61,
	0x73, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x48, 0x06, 0x52, 0x08,
	0x67, 0x61, 0x73, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x07, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x74, 0x6f, 0x61, 0x64, 0x64, 0x72, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67,
	0x61, 0x73, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x61, 0x73, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd2, 0x01, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x06, 0x74,
	0x72, 0x61, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x06, 0x74,
	0x72, 0x61, 0x6e, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x01, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x42, 0x79, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x48, 0x02, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x6c, 0x0a, 0x17, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x1d, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x63, 0x75, 0x6d, 0x67, 0x61, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x06, 0x63, 0x75, 0x6d, 0x67, 0x61, 0x73, 0x88,
	0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x63, 0x75, 0x6d, 0x67, 0x61, 0x73, 0x22, 0xca, 0x01, 0x0a, 0x1b, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69,
	0x74, 0x68, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x47, 0x0a, 0x0b, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x46, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x48, 0x01, 0x52, 0x07,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x22, 0x8d, 0x02, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x07, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x5a, 0x69,
	0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x79, 0x74,
	0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x48, 0x01, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x48, 0x02, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x1f, 0x0a, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x48, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x61, 0x73, 0x68, 0x88, 0x01, 0x01,
	0x12, 0x25, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x72, 0x6f, 0x6f, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x04, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x72, 0x6f, 0x6f, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x68, 0x61, 0x73, 0x68, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x72, 0x6f, 0x6f, 0x74, 0x22, 0xa4, 0x02, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x61, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x68, 0x61, 0x73, 0x68, 0x12, 0x43, 0x0a, 0x06, 0x63, 0x6f, 0x73, 0x69, 0x67,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71,
	0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x52, 0x06, 0x63, 0x6f, 0x73, 0x69, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x1a, 0x90, 0x01, 0x0a, 0x0c, 0x43,
	0x6f, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x03, 0x63,
	0x73, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69,
	0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x41, 0x72,
	0x72, 0x61, 0x79, 0x52, 0x03, 0x63, 0x73, 0x31, 0x12, 0x12, 0x0a, 0x02, 0x62, 0x31, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x08, 0x42, 0x02, 0x10, 0x01, 0x52, 0x02, 0x62, 0x31, 0x12, 0x2b, 0x0a, 0x03,
	0x63, 0x73, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x5a, 0x69, 0x6c, 0x6c,
	0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x41,
	0x72, 0x72, 0x61, 0x79, 0x52, 0x03, 0x63, 0x73, 0x32, 0x12, 0x12, 0x0a, 0x02, 0x62, 0x32, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x08, 0x42, 0x02, 0x10, 0x01, 0x52, 0x02, 0x62, 0x32, 0x22, 0x72, 0x0a,
	0x14, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x42, 0x61, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x65, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65,
	0x65, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x76, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x68, 0x61, 0x73,
	0x68, 0x22, 0x9a, 0x0a, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x53, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x42, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x53, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x44, 0x53, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x5a, 0x69, 0x6c, 0x6c,
	0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x61, 0x73, 0x65, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x62, 0x61, 0x73, 0x65, 0x1a, 0x5a, 0x0a, 0x0e, 0x44, 0x53, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x61, 0x73, 0x68, 0x53, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x73, 0x68,
	0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x68, 0x61, 0x73, 0x68, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x1a, 0xab, 0x08, 0x0a, 0x0d, 0x44, 0x53, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x4e, 0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x5a, 0x69,
	0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x73, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x64, 0x73, 0x64, 0x69, 0x66, 0x66,
	0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63,
	0x75, 0x6c, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66,
	0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x76, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x68, 0x61,
	0x73, 0x68, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x70, 0x75, 0x62, 0x6b,
	0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69,
	0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x41, 0x72,
	0x72, 0x61, 0x79, 0x52, 0x0c, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x70, 0x75, 0x62, 0x6b, 0x65,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x6e, 0x75, 0x6d, 0x12, 0x1a, 0x0a,
	0x08, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x6e, 0x75, 0x6d, 0x12, 0x35, 0x0a, 0x08, 0x67, 0x61, 0x73,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x5a, 0x69,
	0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x79, 0x74,
	0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x08, 0x67, 0x61, 0x73, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x31, 0x0a, 0x06, 0x73, 0x77, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x06, 0x73, 0x77, 0x69,
	0x6e, 0x66, 0x6f, 0x12, 0x55, 0x0a, 0x09, 0x64, 0x73, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x53, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x44, 0x53, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x2e, 0x50, 0x6f, 0x77, 0x44, 0x53, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x52,
	0x09, 0x64, 0x73, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x3f, 0x0a, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69,
	0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44,
	0x53, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x44, 0x53, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61,
	0x73, 0x68, 0x53, 0x65, 0x74, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x37, 0x0a, 0x09, 0x64,
	0x73, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x42, 0x79, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x09, 0x64, 0x73, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x64, 0x12, 0x51, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71,
	0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x53,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x44, 0x53, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x1a, 0x68, 0x0a, 0x0c, 0x50, 0x6f, 0x77, 0x44, 0x53,
	0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x2b, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x03, 0x76, 0x61,
	0x6c, 0x1a, 0x32, 0x0a, 0x04, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0xc6, 0x01, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x69, 0x64, 0x12, 0x49, 0x0a, 0x07, 0x64, 0x73, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x53, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x44, 0x53, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e,
	0x56, 0x6f, 0x74, 0x65, 0x52, 0x07, 0x64, 0x73, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x4f, 0x0a,
	0x0a, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x53, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x44, 0x53, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x56, 0x6f,
	0x74, 0x65, 0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x63,
	0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x62, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6d,
	0x62, 0x68, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x72, 0x6f, 0x6f, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x78, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x1a, 0x0a,
	0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00,
	0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x69, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x6f, 0x6e, 0x65,
	0x6f, 0x66, 0x33, 0x22, 0xa3, 0x06, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x78, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x42, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x78, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x54, 0x78, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x07, 0x6d, 0x62, 0x69, 0x6e,
	0x66, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x5a, 0x69, 0x6c, 0x6c,
	0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x4d, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x6d, 0x62, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12,
	0x3c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x62, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x62, 0x61, 0x73, 0x65, 0x1a, 0x7e, 0x0a,
	0x0e, 0x54, 0x78, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x53, 0x65, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x72, 0x6f, 0x6f, 0x74, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x72, 0x6f, 0x6f,
	0x74, 0x68, 0x61, 0x73, 0x68, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x65,
	0x6c, 0x74, 0x61, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1e, 0x0a,
	0x0a, 0x6d, 0x62, 0x69, 0x6e, 0x66, 0x6f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x6d, 0x62, 0x69, 0x6e, 0x66, 0x6f, 0x68, 0x61, 0x73, 0x68, 0x1a, 0xd9, 0x03,
	0x0a, 0x0d, 0x54, 0x78, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x4e, 0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69,
	0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x67, 0x61, 0x73, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x07, 0x67,
	0x61, 0x73, 0x75, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x07,
	0x67, 0x61, 0x73, 0x75, 0x73, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x07, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x5a, 0x69,
	0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x79, 0x74,
	0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x76, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x6e, 0x75, 0x6d, 0x12, 0x3f, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x78, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x54, 0x78, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x53,
	0x65, 0x74, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x74,
	0x78, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x74,
	0x78, 0x73, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x70, 0x75,
	0x62, 0x6b, 0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x5a, 0x69, 0x6c,
	0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x79, 0x74, 0x65,
	0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x70, 0x75, 0x62, 0x6b,
	0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x73, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x6e, 0x75, 0x6d,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x64, 0x73, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x6e,
	0x75, 0x6d, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x67, 0x61, 0x73, 0x75, 0x73, 0x65, 0x64, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x6e, 0x75, 0x6d, 0x74, 0x78, 0x73, 0x42, 0x0a, 0x5a, 0x08, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_proto_rawDescOnce sync.Once
	file_message_proto_rawDescData = file_message_proto_rawDesc
)

func file_message_proto_rawDescGZIP() []byte {
	file_message_proto_rawDescOnce.Do(func() {
		file_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_proto_rawDescData)
	})
	return file_message_proto_rawDescData
}

var file_message_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_message_proto_goTypes = []interface{}{
	(*ByteArray)(nil),                               // 0: ZilliqaMessage.ByteArray
	(*ProtoTransactionCoreInfo)(nil),                // 1: ZilliqaMessage.ProtoTransactionCoreInfo
	(*ProtoTransaction)(nil),                        // 2: ZilliqaMessage.ProtoTransaction
	(*ProtoTransactionReceipt)(nil),                 // 3: ZilliqaMessage.ProtoTransactionReceipt
	(*ProtoTransactionWithReceipt)(nil),             // 4: ZilliqaMessage.ProtoTransactionWithReceipt
	(*ProtoAccountBase)(nil),                        // 5: ZilliqaMessage.ProtoAccountBase
	(*ProtoBlockBase)(nil),                          // 6: ZilliqaMessage.ProtoBlockBase
	(*ProtoBlockHeaderBase)(nil),                    // 7: ZilliqaMessage.ProtoBlockHeaderBase
	(*ProtoDSBlock)(nil),                            // 8: ZilliqaMessage.ProtoDSBlock
	(*ProtoMbInfo)(nil),                             // 9: ZilliqaMessage.ProtoMbInfo
	(*ProtoTxBlock)(nil),                            // 10: ZilliqaMessage.ProtoTxBlock
	(*ProtoBlockBase_CoSignatures)(nil),             // 11: ZilliqaMessage.ProtoBlockBase.CoSignatures
	(*ProtoDSBlock_DSBlockHashSet)(nil),             // 12: ZilliqaMessage.ProtoDSBlock.DSBlockHashSet
	(*ProtoDSBlock_DSBlockHeader)(nil),              // 13: ZilliqaMessage.ProtoDSBlock.DSBlockHeader
	(*ProtoDSBlock_DSBlockHeader_PowDSWinners)(nil), // 14: ZilliqaMessage.ProtoDSBlock.DSBlockHeader.PowDSWinners
	(*ProtoDSBlock_DSBlockHeader_Vote)(nil),         // 15: ZilliqaMessage.ProtoDSBlock.DSBlockHeader.Vote
	(*ProtoDSBlock_DSBlockHeader_Proposal)(nil),     // 16: ZilliqaMessage.ProtoDSBlock.DSBlockHeader.Proposal
	(*ProtoTxBlock_TxBlockHashSet)(nil),             // 17: ZilliqaMessage.ProtoTxBlock.TxBlockHashSet
	(*ProtoTxBlock_TxBlockHeader)(nil),              // 18: ZilliqaMessage.ProtoTxBlock.TxBlockHeader
}
var file_message_proto_depIdxs = []int32{
	0,  // 0: ZilliqaMessage.ProtoTransactionCoreInfo.senderpubkey:type_name -> ZilliqaMessage.ByteArray
	0,  // 1: ZilliqaMessage.ProtoTransactionCoreInfo.amount:type_name -> ZilliqaMessage.ByteArray
	0,  // 2: ZilliqaMessage.ProtoTransactionCoreInfo.gasprice:type_name -> ZilliqaMessage.ByteArray
	1,  // 3: ZilliqaMessage.ProtoTransaction.info:type_name -> ZilliqaMessage.ProtoTransactionCoreInfo
	0,  // 4: ZilliqaMessage.ProtoTransaction.signature:type_name -> ZilliqaMessage.ByteArray
	2,  // 5: ZilliqaMessage.ProtoTransactionWithReceipt.transaction:type_name -> ZilliqaMessage.ProtoTransaction
	3,  // 6: ZilliqaMessage.ProtoTransactionWithReceipt.receipt:type_name -> ZilliqaMessage.ProtoTransactionReceipt
	0,  // 7: ZilliqaMessage.ProtoAccountBase.balance:type_name -> ZilliqaMessage.ByteArray
	11, // 8: ZilliqaMessage.ProtoBlockBase.cosigs:type_name -> ZilliqaMessage.ProtoBlockBase.CoSignatures
	13, // 9: ZilliqaMessage.ProtoDSBlock.header:type_name -> ZilliqaMessage.ProtoDSBlock.DSBlockHeader
	6,  // 10: ZilliqaMessage.ProtoDSBlock.blockbase:type_name -> ZilliqaMessage.ProtoBlockBase
	18, // 11: ZilliqaMessage.ProtoTxBlock.header:type_name -> ZilliqaMessage.ProtoTxBlock.TxBlockHeader
	9,  // 12: ZilliqaMessage.ProtoTxBlock.mbinfos:type_name -> ZilliqaMessage.ProtoMbInfo
	6,  // 13: ZilliqaMessage.ProtoTxBlock.blockbase:type_name -> ZilliqaMessage.ProtoBlockBase
	0,  // 14: ZilliqaMessage.ProtoBlockBase.CoSignatures.cs1:type_name -> ZilliqaMessage.ByteArray
	0,  // 15: ZilliqaMessage.ProtoBlockBase.CoSignatures.cs2:type_name -> ZilliqaMessage.ByteArray
	7,  // 16: ZilliqaMessage.ProtoDSBlock.DSBlockHeader.blockheaderbase:type_name -> ZilliqaMessage.ProtoBlockHeaderBase
	0,  // 17: ZilliqaMessage.ProtoDSBlock.DSBlockHeader.leaderpubkey:type_name -> ZilliqaMessage.ByteArray
	0,  // 18: ZilliqaMessage.ProtoDSBlock.DSBlockHeader.gasprice:type_name -> ZilliqaMessage.ByteArray
	0,  // 19: ZilliqaMessage.ProtoDSBlock.DSBlockHeader.swinfo:type_name -> ZilliqaMessage.ByteArray
	14, // 20: ZilliqaMessage.ProtoDSBlock.DSBlockHeader.dswinners:type_name -> ZilliqaMessage.ProtoDSBlock.DSBlockHeader.PowDSWinners
	12, // 21: ZilliqaMessage.ProtoDSBlock.DSBlockHeader.hash:type_name -> ZilliqaMessage.ProtoDSBlock.DSBlockHashSet
	0,  // 22: ZilliqaMessage.ProtoDSBlock.DSBlockHeader.dsremoved:type_name -> ZilliqaMessage.ByteArray
	16, // 23: ZilliqaMessage.ProtoDSBlock.DSBlockHeader.proposals:type_name -> ZilliqaMessage.ProtoDSBlock.DSBlockHeader.Proposal
	0,  // 24: ZilliqaMessage.ProtoDSBlock.DSBlockHeader.PowDSWinners.key:type_name -> ZilliqaMessage.ByteArray
	0,  // 25: ZilliqaMessage.ProtoDSBlock.DSBlockHeader.PowDSWinners.val:type_name -> ZilliqaMessage.ByteArray
	15, // 26: ZilliqaMessage.ProtoDSBlock.DSBlockHeader.Proposal.dsvotes:type_name -> ZilliqaMessage.ProtoDSBlock.DSBlockHeader.Vote
	15, // 27: ZilliqaMessage.ProtoDSBlock.DSBlockHeader.Proposal.minervotes:type_name -> ZilliqaMessage.ProtoDSBlock.DSBlockHeader.Vote
	7,  // 28: ZilliqaMessage.ProtoTxBlock.TxBlockHeader.blockheaderbase:type_name -> ZilliqaMessage.ProtoBlockHeaderBase
	0,  // 29: ZilliqaMessage.ProtoTxBlock.TxBlockHeader.rewards:type_name -> ZilliqaMessage.ByteArray
	17, // 30: ZilliqaMessage.ProtoTxBlock.TxBlockHeader.hash:type_name -> ZilliqaMessage.ProtoTxBlock.TxBlockHashSet
	0,  // 31: ZilliqaMessage.ProtoTxBlock.TxBlockHeader.minerpubkey:type_name -> ZilliqaMessage.ByteArray
	32, // [32:32] is the sub-list for method output_type
	32, // [32:32] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_message_proto_init() }
func file_message_proto_init() {
	if File_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByteArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTransactionCoreInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTransactionReceipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTransactionWithReceipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoAccountBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoBlockBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoBlockHeaderBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoDSBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoMbInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTxBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoBlockBase_CoSignatures); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoDSBlock_DSBlockHashSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoDSBlock_DSBlockHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoDSBlock_DSBlockHeader_PowDSWinners); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoDSBlock_DSBlockHeader_Vote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoDSBlock_DSBlockHeader_Proposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTxBlock_TxBlockHashSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTxBlock_TxBlockHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_message_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_message_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_message_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_message_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_message_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_message_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_message_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*ProtoMbInfo_Shardid)(nil),
	}
	file_message_proto_msgTypes[18].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_proto_goTypes,
		DependencyIndexes: file_message_proto_depIdxs,
		MessageInfos:      file_message_proto_msgTypes,
	}.Build()
	File_message_proto = out.File
	file_message_proto_rawDesc = nil
	file_message_proto_goTypes = nil
	file_message_proto_depIdxs = nil
}

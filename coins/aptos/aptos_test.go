package aptos

import (
	cryptorand "crypto/rand"
	"encoding/hex"
	"fmt"
	"io"
	"math"
	"math/big"
	"strconv"
	"strings"
	"testing"
	"time"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"github.com/xiaohuasheng0x1/blockchains/coins/aptos/serde"
	"github.com/xiaohuasheng0x1/blockchains/coins/aptos/types"
	"github.com/xiaohuasheng0x1/blockchains/crypto/ed25519"
)

func TestShortenAddress(t *testing.T) {
	add := ShortenAddress("0x00000000000000000123")
	expected := "0x123"
	assert.Equal(t, expected, add)
}

func TestExpandAddress(t *testing.T) {
	addr := ExpandAddress("0x123")
	expected := "0x0000000000000000000000000000000000000000000000000000000000000123"
	assert.Equal(t, expected, addr)
}

func TestNewAddress(t *testing.T) {

	seed := make([]byte, 32)
	_, err := io.ReadFull(cryptorand.Reader, seed)
	assert.Nil(t, err)
	seedHex := hex.EncodeToString(seed)
	t.Log("seed hex : ", seedHex)

	addr, err := NewAddress("1790962db820729606cd7b255ace1ac5ebb129ac8e9b2d8534d022194ab25b37", false)
	assert.Nil(t, err)
	expected := "0x62ce47951b114b3bf91e179a368763d99d1adc59a3b17aed65f245c5977dde82"
	assert.Equal(t, expected, addr)

	addr, err = NewAddress("1790962db820729606cd7b255ace1ac5ebb129ac8e9b2d8534d022194ab25b37", true)
	assert.Nil(t, err)
	expected = "0x62ce47951b114b3bf91e179a368763d99d1adc59a3b17aed65f245c5977dde82"
	assert.Equal(t, expected, addr)

	ret := ValidateAddress(addr, false)
	assert.True(t, ret)

	addr = ExpandAddress(addr)
	assert.Equal(t, expected, addr)

	ret = ValidateAddress(addr, false)
	assert.True(t, ret)
}

func TestValidateAddress(t *testing.T) {
	ret := ValidateAddress("0xedc4410aa38b512e3173fcd1e119abb13872d6928dce0842664ad6ada1ccd28", false)
	assert.True(t, ret)

	ret = ValidateAddress("0xdc4410aa38b512e3173fcd1e119abb13872d6928dce0842664ad6ada1ccd28", false)
	assert.True(t, ret)

	ret = ValidateAddress("0xc4410aa38b512e3173fcd1e119abb13872d6928dce0842664ad6ada1ccd28", false)
	assert.False(t, ret)

	ret = ValidateAddress("0x0edc4410aa38b512e3173fcd1e119abb13872d6928dce0842664ad6ada1ccd28", false)
	assert.True(t, ret)

	ret = ValidateAddress("0edc4410aa38b512e3173fcd1e119abb13872d6928dce0842664ad6ada1ccd28", false)
	assert.True(t, ret)

	ret = ValidateAddress("edc4410aa38b512e3173fcd1e119abb13872d6928dce0842664ad6ada1ccd28", false)
	assert.False(t, ret)

	ret = ValidateAddress("0edc4410aa38b512e3173fcd1e119abb13872d6928dce0842664ad6ada1ccd2k", false)
	assert.False(t, ret)

	ret = ValidateAddress(strings.ToUpper("0edc4410aa38b512e3173fcd1e119abb13872d6928dce0842664ad6ada1ccd28"), false)
	assert.True(t, ret)
}

func TestTransfer(t *testing.T) {
	t.Run("transfer", func(t *testing.T) {
		from := "0xedc4410aa38b512e3173fcd1e119abb13872d6928dce0842664ad6ada1ccd28"
		to := "0xedc4410aa38b512e3173fcd1e119abb13872d6928dce0842664ad6ada1ccd28"
		amount := 1000
		sequenceNumber := 1
		maxGasAmount := 10000
		gasUnitPrice := 100
		expirationTimestampSecs := time.Now().Unix() + 300
		chainId := 2
		seedHex := "1790962db820729606cd7b255ace1ac5ebb129ac8e9b2d8534d022194ab25b37"
		data, err := Transfer(from, uint64(sequenceNumber), uint64(maxGasAmount), uint64(gasUnitPrice), uint64(expirationTimestampSecs), uint8(chainId),
			to, uint64(amount), seedHex)
		assert.Nil(t, err)
		t.Log("data : ", data)
	})

	t.Run("transfer", func(t *testing.T) {
		from := "0xffb6fac50e85d7c6ae1b13347fac94c819bf68b1b45ae612a5d51e264e0a27fe"
		to := "0xd6d64011d498462e065d0c85648cb357e2f1c9df37d9179755ddf89c1e830c77"
		amount := 1000
		sequenceNumber := 18
		maxGasAmount := 10000
		gasUnitPrice := 100
		expirationTimestampSecs := time.Now().Unix() + 300
		chainId := 2
		seedHex := "1790962db820729606cd7b255ace1ac5ebb129ac8e9b2d8534d022194ab25b37"
		data, err := Transfer(from, uint64(sequenceNumber), uint64(maxGasAmount), uint64(gasUnitPrice), uint64(expirationTimestampSecs), uint8(chainId),
			to, uint64(amount), seedHex)
		assert.Nil(t, err)
		t.Log("data : ", data)
	})
}

func TestGetTransactionHash(t *testing.T) {
	// 0x504274d32b1da79753430ac1db83748a3a866bc57c46868db1ca794eb5d910e8
	hash, err := GetTransactionHash("8e6d339ff6096080a4d91c291b297d3814ff9daa34e0f5562d4e7d442cafecdc03000000000000000200000000000000000000000000000000000000000000000000000000000000010d6170746f735f6163636f756e74087472616e736665720002200163f9f9f773f3b0e788559d9efcbe547889500d0891fe024e782c7224defd0108e80300000000000010270000000000000100000000000000256c196300000000190020312a81c872aad3a910157ca7b05e70fe2e62aed55b4a14ad033db4556c1547dc401e3bfcb995b1a6ece6b89723721795fd1f46de7593e0f212625431cd727bee04256d03ccf140b16c7db484682f23d2b2620393bf480e0cabcce60f90d463440a")
	assert.Nil(t, err)
	t.Log("hash : ", hash)
}

func TestCoinTransfer(t *testing.T) {
	from := "0xedc4410aa38b512e3173fcd1e119abb13872d6928dce0842664ad6ada1ccd28"
	to := "0xedc4410aa38b512e3173fcd1e119abb13872d6928dce0842664ad6ada1ccd28"
	amount := 1000
	sequenceNumber := 3
	maxGasAmount := 10000
	gasUnitPrice := 100
	expirationTimestampSecs := time.Now().Unix() + 300
	chainId := 2
	seedHex := "1790962db820729606cd7b255ace1ac5ebb129ac8e9b2d8534d022194ab25b37"
	contractAddr := "0xcb95e54bf4baa46bfc6748ef979edca6199a923df3d0757d896a7dc93514a19b"
	txType := fmt.Sprintf("%s::moon_coin::MoonCoin", contractAddr)
	payload, _ := CoinTransferPayload(to, uint64(amount), txType)
	data, err := BuildSignedTransaction(from, uint64(sequenceNumber), uint64(maxGasAmount), uint64(gasUnitPrice), uint64(expirationTimestampSecs), uint8(chainId), payload, seedHex)
	// 8e6d339ff6096080a4d91c291b297d3814ff9daa34e0f5562d4e7d442cafecdc0600000000000000030000000000000000000000000000000000000000000000000000000000000001076163636f756e74087472616e736665720002200163f9f9f773f3b0e788559d9efcbe547889500d0891fe024e782c7224defd0108e803000000000000102700000000000001000000000000000399f36200000000160020312a81c872aad3a910157ca7b05e70fe2e62aed55b4a14ad033db4556c1547dc405d6ee9fdaa7f6a91460f738771a673674cf31fa5ffeb440a0e50eb938f5a6d8fc2267a170b2958735c024cb4600f0d83b432c8acfdd5c58e769bfde51ddc0b05
	assert.Nil(t, err)
	t.Log("data : ", data)
}

func TestCoinRegister(t *testing.T) {
	from := "0xedc4410aa38b512e3173fcd1e119abb13872d6928dce0842664ad6ada1ccd28"
	to := "0xedc4410aa38b512e3173fcd1e119abb13872d6928dce0842664ad6ada1ccd28"
	amount := 1000
	sequenceNumber := 2
	maxGasAmount := 10000
	gasUnitPrice := 100
	expirationTimestampSecs := time.Now().Unix() + 300
	chainId := 2
	seedHex := "1790962db820729606cd7b255ace1ac5ebb129ac8e9b2d8534d022194ab25b37"
	txType := "0x3::moon_coin::MoonCoin"
	payload, _ := CoinTransferPayload(to, uint64(amount), txType)
	data, err := BuildSignedTransaction(from, uint64(sequenceNumber), uint64(maxGasAmount), uint64(gasUnitPrice), uint64(expirationTimestampSecs), uint8(chainId), payload, seedHex)
	// 8e6d339ff6096080a4d91c291b297d3814ff9daa34e0f5562d4e7d442cafecdc0600000000000000030000000000000000000000000000000000000000000000000000000000000001076163636f756e74087472616e736665720002200163f9f9f773f3b0e788559d9efcbe547889500d0891fe024e782c7224defd0108e803000000000000102700000000000001000000000000000399f36200000000160020312a81c872aad3a910157ca7b05e70fe2e62aed55b4a14ad033db4556c1547dc405d6ee9fdaa7f6a91460f738771a673674cf31fa5ffeb440a0e50eb938f5a6d8fc2267a170b2958735c024cb4600f0d83b432c8acfdd5c58e769bfde51ddc0b05
	assert.Nil(t, err)
	t.Log("data : ", data)
}

func TestPayloadFromJsonAndAbi(t *testing.T) {
	t.Run("bridge", func(t *testing.T) {
		//payload := "{\"function\":\"0xbbefaf1bea0f833d47381c990017326aa363478a1e5f9351b62635a0b15da794::router::bridgeTo\",\"type_arguments\":[\"0xbc954a7df993344c9fec9aaccdf96673a897025119fc38a8e0f637598496b47a::test_mint_weth_coin::TestMintCoin\"],\"arguments\":[1,\"1000000\",\"5\",\"0xf9ac85635c0fa7b6317b48dc19613e9e4356c469\",\"1765394084113\"],\"type\":\"entry_function_payload\"}"
		payload := "{\"function\":\"0xbbefaf1bea0f833d47381c990017326aa363478a1e5f9351b62635a0b15da794::router::bridgeTo\",\"type_arguments\":[\"0xbc954a7df993344c9fec9aaccdf96673a897025119fc38a8e0f637598496b47a::test_mint_weth_coin::TestMintCoin\"],\"arguments\":[1,\"1000000\",\"5\",\"0xf9ac85635c0fa7b6317b48dc19613e9e4356c469\",\"1765394084113\"],\"type\":\"entry_function_payload\"}"
		abi := "[{\"bytecode\":\"\",\"abi\":{\"address\":\"0xbbefaf1bea0f833d47381c990017326aa363478a1e5f9351b62635a0b15da794\",\"name\":\"router\",\"friends\":[],\"exposed_functions\":[{\"name\":\"bridgeTo\",\"visibility\":\"public\",\"is_entry\":true,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"&signer\",\"u8\",\"u64\",\"u64\",\"vector<u8>\",\"u64\"],\"return\":[]}],\"structs\":[]}}]"
		p, err := PayloadFromJsonAndAbi(payload, abi)
		require.Nil(t, err)
		bytes, _ := p.BcsSerialize()
		t.Log("payload hex : ", hex.EncodeToString(bytes))
	})

	t.Run("swap", func(t *testing.T) {
		payload := "{\"function\":\"0xcb95e54bf4baa46bfc6748ef979edca6199a923df3d0757d896a7dc93514a19b::aggregator::unxswap\",\"type_arguments\":[\"0x1::aptos_coin::AptosCoin\",\"0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::coins::BTC\",\"0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::coins::USDT\",\"0x1::aptos_coin::AptosCoin\",\"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\",\"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\",\"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\"],\"arguments\":[\"1000000\",\"0\",\"0x030303\",[\"0\",\"0\",\"0\"],[true,false,true]],\"type\":\"entry_function_payload\"}"
		abi := "[{\"bytecode\":\"\",\"abi\":{\"address\":\"0xcb95e54bf4baa46bfc6748ef979edca6199a923df3d0757d896a7dc93514a19b\",\"name\":\"aggregator\",\"friends\":[],\"exposed_functions\":[{\"name\":\"get_intermediate_output\",\"visibility\":\"public\",\"is_entry\":false,\"generic_type_params\":[{\"constraints\":[]},{\"constraints\":[]},{\"constraints\":[]}],\"params\":[\"&signer\",\"u8\",\"u64\",\"bool\",\"0x1::coin::Coin<T0>\"],\"return\":[\"0x1::option::Option<0x1::coin::Coin<T0>>\",\"0x1::coin::Coin<T1>\"]},{\"name\":\"init_router\",\"visibility\":\"public\",\"is_entry\":true,\"generic_type_params\":[],\"params\":[\"&signer\"],\"return\":[]},{\"name\":\"one_step_internal\",\"visibility\":\"public\",\"is_entry\":false,\"generic_type_params\":[{\"constraints\":[]},{\"constraints\":[]},{\"constraints\":[]}],\"params\":[\"&signer\",\"u8\",\"u64\",\"bool\",\"0x1::coin::Coin<T0>\"],\"return\":[\"0x1::option::Option<0x1::coin::Coin<T0>>\",\"0x1::coin::Coin<T1>\"]},{\"name\":\"public_unxswap\",\"visibility\":\"public\",\"is_entry\":false,\"generic_type_params\":[{\"constraints\":[]},{\"constraints\":[]},{\"constraints\":[]},{\"constraints\":[]},{\"constraints\":[]},{\"constraints\":[]},{\"constraints\":[]}],\"params\":[\"&signer\",\"u64\",\"u64\",\"vector<u8>\",\"vector<u64>\",\"vector<bool>\"],\"return\":[\"u64\"]},{\"name\":\"three_step_direct\",\"visibility\":\"public\",\"is_entry\":false,\"generic_type_params\":[{\"constraints\":[]},{\"constraints\":[]},{\"constraints\":[]},{\"constraints\":[]},{\"constraints\":[]},{\"constraints\":[]},{\"constraints\":[]}],\"params\":[\"&signer\",\"u8\",\"u64\",\"bool\",\"u8\",\"u64\",\"bool\",\"u8\",\"u64\",\"bool\",\"0x1::coin::Coin<T0>\"],\"return\":[\"0x1::option::Option<0x1::coin::Coin<T0>>\",\"0x1::option::Option<0x1::coin::Coin<T1>>\",\"0x1::option::Option<0x1::coin::Coin<T2>>\",\"0x1::coin::Coin<T3>\"]},{\"name\":\"two_step_direct\",\"visibility\":\"public\",\"is_entry\":false,\"generic_type_params\":[{\"constraints\":[]},{\"constraints\":[]},{\"constraints\":[]},{\"constraints\":[]},{\"constraints\":[]}],\"params\":[\"&signer\",\"u8\",\"u64\",\"bool\",\"u8\",\"u64\",\"bool\",\"0x1::coin::Coin<T0>\"],\"return\":[\"0x1::option::Option<0x1::coin::Coin<T0>>\",\"0x1::option::Option<0x1::coin::Coin<T1>>\",\"0x1::coin::Coin<T2>\"]},{\"name\":\"unxswap\",\"visibility\":\"public\",\"is_entry\":true,\"generic_type_params\":[{\"constraints\":[]},{\"constraints\":[]},{\"constraints\":[]},{\"constraints\":[]},{\"constraints\":[]},{\"constraints\":[]},{\"constraints\":[]}],\"params\":[\"&signer\",\"u64\",\"u64\",\"vector<u8>\",\"vector<u64>\",\"vector<bool>\"],\"return\":[]}],\"structs\":[{\"name\":\"EventEntity\",\"is_native\":false,\"abilities\":[\"key\"],\"generic_type_params\":[],\"fields\":[{\"name\":\"swap_step_events\",\"type\":\"0x1::event::EventHandle<0xcb95e54bf4baa46bfc6748ef979edca6199a923df3d0757d896a7dc93514a19b::aggregator::SwapHipEvent>\"}]},{\"name\":\"Hip\",\"is_native\":false,\"abilities\":[\"drop\",\"store\"],\"generic_type_params\":[],\"fields\":[{\"name\":\"dex_type\",\"type\":\"u8\"},{\"name\":\"pool_type\",\"type\":\"u64\"},{\"name\":\"is_x_to_y\",\"type\":\"bool\"}]},{\"name\":\"SwapHipEvent\",\"is_native\":false,\"abilities\":[\"drop\",\"store\"],\"generic_type_params\":[],\"fields\":[{\"name\":\"dex_type\",\"type\":\"u8\"},{\"name\":\"pool_type\",\"type\":\"u64\"},{\"name\":\"x_type_info\",\"type\":\"0x1::type_info::TypeInfo\"},{\"name\":\"y_type_info\",\"type\":\"0x1::type_info::TypeInfo\"},{\"name\":\"input_amount\",\"type\":\"u64\"},{\"name\":\"output_amount\",\"type\":\"u64\"},{\"name\":\"time_stamp\",\"type\":\"u64\"}]}]}}]"
		p, err := PayloadFromJsonAndAbi(payload, abi)
		require.Nil(t, err)
		bytes, _ := p.BcsSerialize()
		t.Log("payload hex : ", hex.EncodeToString(bytes))
	})
}

func TestEncode(t *testing.T) {
	ii := big.Int{}
	ii.SetString("123", 10)
	low := big.Int{}
	low.And(&ii, big.NewInt(int64(math.Pow(2.0, 64.0)-1)))
	high := big.Int{}
	high.Rsh(&ii, 64)
	iii := serde.Uint128{
		High: high.Uint64(),
		Low:  low.Uint64(),
	}
	bytes, _ := types.BcsSerializeU128(iii)
	t.Log("encoded : ", hex.EncodeToString(bytes))
}

func TestRegisterCoin(t *testing.T) {
	from := "0xedc4410aa38b512e3173fcd1e119abb13872d6928dce0842664ad6ada1ccd28"
	sequenceNumber := uint64(2)
	maxGasAmount := uint64(10000)
	gasUnitPrice := uint64(100)
	expirationTimestampSecs := uint64(time.Now().Unix() + 300)
	chainId := uint8(2)
	seedHex := "1790962db820729606cd7b255ace1ac5ebb129ac8e9b2d8534d022194ab25b37"
	tyArg := "0xcb95e54bf4baa46bfc6748ef979edca6199a923df3d0757d896a7dc93514a19b::moon_coin::MoonCoin"
	payload := CoinRegisterPayload(tyArg)
	tx, err := BuildSignedTransaction(from, sequenceNumber, maxGasAmount, gasUnitPrice, expirationTimestampSecs, chainId, payload, seedHex)
	assert.Nil(t, err)
	t.Log("tx : ", tx)
}

func TestCoinPayLoad(t *testing.T) {
	// 0x3::moon_coin::MoonCoin  address (hex) + module + struct
	tyArg := "0x5e603a89cf690d7134cf2f24fdb16ba90c4f5686333721c12e835fb6c76bc7ba::moon_coin::MoonCoin"
	t.Run("CoinRegisterPayload", func(t *testing.T) {
		p1 := CoinRegisterPayload(tyArg)
		pb1, err := p1.BcsSerialize()
		assert.Nil(t, err)
		t.Log("register payload : ", hex.EncodeToString(pb1))
	})

	t.Run("CoinBurnPayload", func(t *testing.T) {
		p2, _ := CoinBurnPayload(1, tyArg)
		pb2, err := p2.BcsSerialize()
		assert.Nil(t, err)
		t.Log("burn payload : ", hex.EncodeToString(pb2))
	})

	t.Run("CoinMintPayload", func(t *testing.T) {
		p3, _ := CoinMintPayload("0x8e6d339ff6096080a4d91c291b297d3814ff9daa34e0f5562d4e7d442cafecdc", 1, tyArg)
		pb3, err := p3.BcsSerialize()
		assert.Nil(t, err)
		t.Log("mint payload : ", hex.EncodeToString(pb3))
	})

	t.Run("CoinTransferPayload", func(t *testing.T) {
		p4, _ := CoinTransferPayload("0x8e6d339ff6096080a4d91c291b297d3814ff9daa34e0f5562d4e7d442cafecdc", 1, tyArg)
		pb4, err := p4.BcsSerialize()
		assert.Nil(t, err)
		t.Log("transfer payload : ", hex.EncodeToString(pb4))
	})
}

func TestDex(t *testing.T) {
	from := "0xedc4410aa38b512e3173fcd1e119abb13872d6928dce0842664ad6ada1ccd28"
	sequenceNumber := 3
	maxGasAmount := 10000
	gasUnitPrice := 100
	expirationTimestampSecs := time.Now().Unix() + 300
	chainId := 2
	seedHex := "1790962db820729606cd7b255ace1ac5ebb129ac8e9b2d8534d022194ab25b37"
	payload := "{\"function\":\"0x1::managed_coin::register\",\"arguments\":[],\"type\":\"entry_function_payload\",\"type_arguments\":[\"\"]}"
	abi := "[{\"abi\":{\"address\":\"0x1\",\"name\":\"managed_coin\",\"friends\":[],\"exposed_functions\":[{\"name\":\"register\",\"visibility\":\"public\",\"is_entry\":true,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"&signer\"],\"return\":[]}],\"structs\":[{\"name\":\"Capabilities\",\"is_native\":false,\"abilities\":[\"key\"],\"generic_type_params\":[{\"constraints\":[]}],\"fields\":[{\"name\":\"burn_cap\",\"type\":\"0x1::coin::BurnCapability<T0>\"},{\"name\":\"freeze_cap\",\"type\":\"0x1::coin::FreezeCapability<T0>\"},{\"name\":\"mint_cap\",\"type\":\"0x1::coin::MintCapability<T0>\"}]}]}}\n]"
	abiPayload, err := PayloadFromJsonAndAbi(payload, abi)
	require.Nil(t, err)
	data, err := BuildSignedTransaction(from, uint64(sequenceNumber), uint64(maxGasAmount), uint64(gasUnitPrice), uint64(expirationTimestampSecs), uint8(chainId), abiPayload, seedHex)
	t.Log("signed tx : ", data)

	const payload2 = "{\"type\":\"entry_function_payload\",\"function\":\"0xf6994988bd40261af9431cd6dd3fcf765569719e66322c7a05cc78a89cd366d4::FixedPriceMarket::batch_buy_script\",\"type_arguments\":[\"0x1::aptos_coin::AptosCoin\"],\"arguments\":[[\"0x2ba03b661d7691b41053dcf293caff2c17283b19cb4abe866b4855e8f6683771\"],[\"Lala Cat\"],[\"Lala is my daughter #11\"],[\"0\"],[\"1\"],[\"5000000\"],[\"0xf6994988bd40261af9431cd6dd3fcf765569719e66322c7a05cc78a89cd366d4\"],[\"souffle\"]]}"
	const abi2 = "[{\"bytecode\":\"0xa11ceb0b050000000e010016021644035ac401049e022605c402f80207bc05b10708ed0c6006cd0d4610930e87040a9a12520bec12040cf012c9060db919100ec9190a0000010101020103010401050106010701080109020a000b06010001000c0400000d0600000e08010001000f0800001006000a1107000a130400061607000924070007260402030100010428040106010235040100010a36070000120001010000140201000015030401000017050101000018060101000019060100001a07010100001b000800001c090800052d060b00072e0e04020300032f0f0f00073010110203000a31120100073210150203000a33160100073417010203000a371a1b0002380b0f010003390f0f000a3a1b1c000a3b1d0f000a3c1d0f000a3d1d0b00023e1e1f0100023f20010100094001210100044123010106074201250203040143062701060a4400080003450f0f000846010f000a472b0f000a482c08000a0d0c0d0a140e141014120c0e0d180c190c1a0c1b221c0d1d261d221c14040c100d1b260c1403060c0806030004060c080608070302050806010108060c03050508080808030301060c08060c050808080803030303010807030508060305070b0a0208060b000109000806070b0a0208060b0001090005080701050109000208060b0001090002060b0a02090009010900010302070b0a0209000901090001090102060c080705070b0a020806080108060708070801070b0a020806080102080608010107090102070807080703070b0a02090009010900090101060b030109000e030b0c0109000b0c0109000503080d0303050806070b03010900070b000109000807030405080808080301080601080d0106080d02060c03010b0c01090002050b0c01090001080901080502070b0b010900090002050b03010900010b0a0209000901010802010b0b0109000205080407070b0a0208060b000109000806070b0b010802070b0a0208060b000109000b000109000807080606070b0a0208060801080608070708010807070b0a02080608010106080702070807030f746f6b656e5f636f696e5f73776170076163636f756e7404636f696e056572726f72056576656e74067369676e657206737472696e67057461626c650974696d657374616d7009747970655f696e666f05746f6b656e0d546f6b656e436f696e537761700b546f6b656e457363726f7711546f6b656e4c697374696e674576656e740d546f6b656e4c697374696e677310546f6b656e53746f7265457363726f770e546f6b656e537761704576656e7407546f6b656e49641463616e63656c5f746f6b656e5f6c697374696e6705546f6b656e176465706f7369745f746f6b656e5f746f5f657363726f7712646f65735f6c697374696e675f657869737406537472696e671765786368616e67655f636f696e5f666f725f746f6b656e18696e697469616c697a655f746f6b656e5f6c697374696e671d696e697469616c697a655f746f6b656e5f73746f72655f657363726f77136c6973745f746f6b656e5f666f725f737761701a77697468647261775f746f6b656e5f66726f6d5f657363726f772377697468647261775f746f6b656e5f66726f6d5f657363726f775f696e7465726e616c0c746f6b656e5f616d6f756e74136d696e5f70726963655f7065725f746f6b656e116c6f636b65645f756e74696c5f7365637308746f6b656e5f696406616d6f756e74096d696e5f70726963650e636f696e5f747970655f696e666f0854797065496e666f086c697374696e6773055461626c650e6c697374696e675f6576656e74730b4576656e7448616e646c650b737761705f6576656e74730d746f6b656e5f657363726f77730b746f6b656e5f62757965720b636f696e5f616d6f756e740a616464726573735f6f6608636f6e7461696e73096e6f745f666f756e640672656d6f76650d6465706f7369745f746f6b656e0a626f72726f775f6d7574056d657267650361646404436f696e07526f79616c7479136372656174655f746f6b656e5f69645f7261770762616c616e636510696e76616c69645f617267756d656e740b6765745f726f79616c7479176765745f726f79616c74795f64656e6f6d696e61746f72156765745f726f79616c74795f6e756d657261746f72116765745f726f79616c74795f7061796565087769746864726177076465706f73697407747970655f6f660a656d69745f6576656e74036e6577106e65775f6576656e745f68616e646c650e77697468647261775f746f6b656e0e616c72656164795f6578697374730b6e6f775f7365636f6e6473106765745f746f6b656e5f616d6f756e740573706c6974f6994988bd40261af9431cd6dd3fcf765569719e66322c7a05cc78a89cd366d40000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000303080700000000000000030801000000000000000308060000000000000003080400000000000000030802000000000000000308050000000000000003080300000000000000126170746f733a3a6d657461646174615f7630f2030701000000000000001545544f4b454e5f414c52454144595f4c495354454414546f6b656e20616c7265616479206c697374656402000000000000001845544f4b454e5f4c495354494e475f4e4f545f45584953541e546f6b656e206c697374696e67206e6f206c6f6e6765722065786973747303000000000000001445544f4b454e5f4e4f545f494e5f455343524f5716546f6b656e206973206e6f7420696e20657363726f7704000000000000003345544f4b454e5f43414e4e4f545f4d4f56455f4f55545f4f465f455343524f575f4245464f52455f4c4f434b55505f54494d453a546f6b656e2063616e6e6f74206265206d6f766564206f7574206f6620657363726f77206265666f726520746865206c6f636b75702074696d6505000000000000001a45544f4b454e5f4d494e5f50524943455f4e4f545f4d415443482b546f6b656e2062757920707269636520646f65736e2774206d61746368206c697374696e6720707269636506000000000000001745544f4b454e5f414d4f554e545f4e4f545f4d415443482d546f6b656e2062757920616d6f756e7420646f65736e2774206d61746368206c697374696e6720616d6f756e74070000000000000010454e4f545f454e4f5547485f434f494e1c4e6f7420656e6f75676820636f696e20746f2062757920746f6b656e0002021d031e030102020a08071f03020205200806210322031f03230809030203250b0a0208060b00010900270b0b010802290b0b0108050402012a0b0a02080608010502052008062b051d032c03230809030c000c0001000203040a240a0011090c060b063c0036000c050a050a010c040c030b032e0b04380003170b00010b05010704110b270b050a013801010a000b010b0211070c070b000b07110d02010100010413210b0011092a040f010c080a080a010c050c040b042e0b053802030f05180b080b0138030f020c060b060b02110f05200b020b0312010c070b080b010b07380402020100010318080b003d000c020b0237000b0138000203010002030419a5010b030b040b050b0611110c110a0011090c0b0a023c000c120a1237000a11380003180b12010b00010704110b270a0b38050a012603240b12010b000107001113270a1236000a1138060c130a133701140a07180b0125033a0b13010b12010b000107051113270a133702140a072603490b13010b12010b000107021113270a020a110a0711080c140a000b14110d0a1111140c0d0a133701140a07180c150e0d11150c0e0b0e06000000000000000021036205650600000000000000000c08056d0a150e0d1116180e0d11151a0c080b080c0f0a150a0f170c0c0e0d11170c100a000b0f38070c090b100b0938080b000b0c38070c0a0b020b0a38080a133702140a0721038b010593010b13010a1236000a11380101059b010a133702140a07170b133602150b1236030b110b0b0b070b1538091205380a020400000024160a0011090c010b013b002003080513380b0a00380c0a00380d39000c020b000b023f0005150b0001020500000028120a0011090c010b012904200308050f380e12040c020b000b022d0405110b00010206010402030429400b010b020b030b0411110c0e0a0011050a000a0e0a05111e0c0d0a000a0e0b0d0a0711010a00380f0a050a0639010c0c0a0011093c0036000c0b0a0b0a0e0c090c080b082e0b09380020032e0b00010b0b010701111f270b0b0a0e0b0c38100b0011093c0036040c0a0b0a0b0e0b050b060b0738091202381102070100010401060b0011090b010b0211080208000001042a3e0b002a040f010c080a080a010c040c030b032e0b04380203120b08010706110b270a080a0138030c0611200a061007142403230b08010b060107031113270a020a061002112121032a05350b06010b080b0138121301010c070b070c05053c0b08010b060f020b0211220c050b050203000400010000010000030203010101000c030c040c050c060c00\",\"abi\":{\"address\":\"0xf6994988bd40261af9431cd6dd3fcf765569719e66322c7a05cc78a89cd366d4\",\"name\":\"token_coin_swap\",\"friends\":[],\"exposed_functions\":[{\"name\":\"cancel_token_listing\",\"visibility\":\"public\",\"is_entry\":false,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"&signer\",\"0x3::token::TokenId\",\"u64\"],\"return\":[]},{\"name\":\"deposit_token_to_escrow\",\"visibility\":\"public\",\"is_entry\":false,\"generic_type_params\":[],\"params\":[\"&signer\",\"0x3::token::TokenId\",\"0x3::token::Token\",\"u64\"],\"return\":[]},{\"name\":\"does_listing_exist\",\"visibility\":\"public\",\"is_entry\":false,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"address\",\"0x3::token::TokenId\"],\"return\":[\"bool\"]},{\"name\":\"exchange_coin_for_token\",\"visibility\":\"public\",\"is_entry\":false,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"&signer\",\"u64\",\"address\",\"address\",\"0x1::string::String\",\"0x1::string::String\",\"u64\",\"u64\"],\"return\":[]},{\"name\":\"list_token_for_swap\",\"visibility\":\"public\",\"is_entry\":true,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"&signer\",\"address\",\"0x1::string::String\",\"0x1::string::String\",\"u64\",\"u64\",\"u64\",\"u64\"],\"return\":[]},{\"name\":\"withdraw_token_from_escrow\",\"visibility\":\"public\",\"is_entry\":false,\"generic_type_params\":[],\"params\":[\"&signer\",\"0x3::token::TokenId\",\"u64\"],\"return\":[\"0x3::token::Token\"]}],\"structs\":[{\"name\":\"TokenCoinSwap\",\"is_native\":false,\"abilities\":[\"drop\",\"store\"],\"generic_type_params\":[{\"constraints\":[]}],\"fields\":[{\"name\":\"token_amount\",\"type\":\"u64\"},{\"name\":\"min_price_per_token\",\"type\":\"u64\"}]},{\"name\":\"TokenEscrow\",\"is_native\":false,\"abilities\":[\"store\"],\"generic_type_params\":[],\"fields\":[{\"name\":\"token\",\"type\":\"0x3::token::Token\"},{\"name\":\"locked_until_secs\",\"type\":\"u64\"}]},{\"name\":\"TokenListingEvent\",\"is_native\":false,\"abilities\":[\"drop\",\"store\"],\"generic_type_params\":[],\"fields\":[{\"name\":\"token_id\",\"type\":\"0x3::token::TokenId\"},{\"name\":\"amount\",\"type\":\"u64\"},{\"name\":\"min_price\",\"type\":\"u64\"},{\"name\":\"locked_until_secs\",\"type\":\"u64\"},{\"name\":\"coin_type_info\",\"type\":\"0x1::type_info::TypeInfo\"}]},{\"name\":\"TokenListings\",\"is_native\":false,\"abilities\":[\"key\"],\"generic_type_params\":[{\"constraints\":[]}],\"fields\":[{\"name\":\"listings\",\"type\":\"0x1::table::Table<0x3::token::TokenId, 0xf6994988bd40261af9431cd6dd3fcf765569719e66322c7a05cc78a89cd366d4::token_coin_swap::TokenCoinSwap<T0>>\"},{\"name\":\"listing_events\",\"type\":\"0x1::event::EventHandle<0xf6994988bd40261af9431cd6dd3fcf765569719e66322c7a05cc78a89cd366d4::token_coin_swap::TokenListingEvent>\"},{\"name\":\"swap_events\",\"type\":\"0x1::event::EventHandle<0xf6994988bd40261af9431cd6dd3fcf765569719e66322c7a05cc78a89cd366d4::token_coin_swap::TokenSwapEvent>\"}]},{\"name\":\"TokenStoreEscrow\",\"is_native\":false,\"abilities\":[\"key\"],\"generic_type_params\":[],\"fields\":[{\"name\":\"token_escrows\",\"type\":\"0x1::table::Table<0x3::token::TokenId, 0xf6994988bd40261af9431cd6dd3fcf765569719e66322c7a05cc78a89cd366d4::token_coin_swap::TokenEscrow>\"}]},{\"name\":\"TokenSwapEvent\",\"is_native\":false,\"abilities\":[\"drop\",\"store\"],\"generic_type_params\":[],\"fields\":[{\"name\":\"token_id\",\"type\":\"0x3::token::TokenId\"},{\"name\":\"token_buyer\",\"type\":\"address\"},{\"name\":\"token_amount\",\"type\":\"u64\"},{\"name\":\"coin_amount\",\"type\":\"u64\"},{\"name\":\"coin_type_info\",\"type\":\"0x1::type_info::TypeInfo\"}]}]}},{\"bytecode\":\"\",\"abi\":{\"address\":\"0xf6994988bd40261af9431cd6dd3fcf765569719e66322c7a05cc78a89cd366d4\",\"name\":\"FixedPriceMarket\",\"friends\":[],\"exposed_functions\":[{\"name\":\"add_acl\",\"visibility\":\"public\",\"is_entry\":true,\"generic_type_params\":[],\"params\":[\"&signer\",\"vector<address>\"],\"return\":[]},{\"name\":\"batch_buy_script\",\"visibility\":\"public\",\"is_entry\":true,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"&signer\",\"vector<address>\",\"vector<0x1::string::String>\",\"vector<0x1::string::String>\",\"vector<u64>\",\"vector<u64>\",\"vector<u64>\",\"vector<address>\",\"vector<0x1::string::String>\"],\"return\":[]},{\"name\":\"batch_cancel_list_script\",\"visibility\":\"public\",\"is_entry\":true,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"&signer\",\"vector<address>\",\"vector<0x1::string::String>\",\"vector<0x1::string::String>\",\"vector<u64>\",\"vector<u64>\",\"vector<address>\",\"vector<0x1::string::String>\"],\"return\":[]},{\"name\":\"batch_change_price_script\",\"visibility\":\"public\",\"is_entry\":true,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"&signer\",\"vector<address>\",\"vector<0x1::string::String>\",\"vector<0x1::string::String>\",\"vector<u64>\",\"vector<u64>\",\"vector<u64>\",\"vector<u64>\",\"vector<address>\",\"vector<0x1::string::String>\"],\"return\":[]},{\"name\":\"batch_list_script\",\"visibility\":\"public\",\"is_entry\":true,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"&signer\",\"vector<address>\",\"vector<0x1::string::String>\",\"vector<0x1::string::String>\",\"vector<u64>\",\"vector<u64>\",\"vector<u64>\",\"vector<u64>\",\"vector<address>\",\"vector<0x1::string::String>\"],\"return\":[]},{\"name\":\"buy\",\"visibility\":\"public\",\"is_entry\":false,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"&signer\",\"address\",\"0x1::string::String\",\"0x1::string::String\",\"u64\",\"u64\",\"u64\",\"0xf6994988bd40261af9431cd6dd3fcf765569719e66322c7a05cc78a89cd366d4::FixedPriceMarket::MarketId<T0>\"],\"return\":[]},{\"name\":\"buy_script\",\"visibility\":\"public\",\"is_entry\":true,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"&signer\",\"address\",\"0x1::string::String\",\"0x1::string::String\",\"u64\",\"u64\",\"u64\",\"address\",\"0x1::string::String\"],\"return\":[]},{\"name\":\"cancel_list\",\"visibility\":\"public\",\"is_entry\":false,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"&signer\",\"0x3::token::TokenId\",\"0xf6994988bd40261af9431cd6dd3fcf765569719e66322c7a05cc78a89cd366d4::FixedPriceMarket::MarketId<T0>\",\"u64\"],\"return\":[]},{\"name\":\"cancel_list_script\",\"visibility\":\"public\",\"is_entry\":true,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"&signer\",\"address\",\"0x1::string::String\",\"0x1::string::String\",\"u64\",\"u64\",\"address\",\"0x1::string::String\"],\"return\":[]},{\"name\":\"change_price_script\",\"visibility\":\"public\",\"is_entry\":true,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"&signer\",\"address\",\"0x1::string::String\",\"0x1::string::String\",\"u64\",\"u64\",\"u64\",\"u64\",\"address\",\"0x1::string::String\"],\"return\":[]},{\"name\":\"create_market\",\"visibility\":\"public\",\"is_entry\":true,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"&signer\",\"u64\",\"address\",\"0x1::string::String\"],\"return\":[]},{\"name\":\"create_market_id_raw\",\"visibility\":\"public\",\"is_entry\":false,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"address\",\"0x1::string::String\"],\"return\":[\"0xf6994988bd40261af9431cd6dd3fcf765569719e66322c7a05cc78a89cd366d4::FixedPriceMarket::MarketId<T0>\"]},{\"name\":\"is_ticket_exsit\",\"visibility\":\"public\",\"is_entry\":false,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"address\",\"0x3::token::TokenId\"],\"return\":[\"bool\"]},{\"name\":\"list\",\"visibility\":\"public\",\"is_entry\":false,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"&signer\",\"address\",\"0x1::string::String\",\"0x1::string::String\",\"u64\",\"u64\",\"u64\",\"u64\",\"0xf6994988bd40261af9431cd6dd3fcf765569719e66322c7a05cc78a89cd366d4::FixedPriceMarket::MarketId<T0>\"],\"return\":[]},{\"name\":\"list_script\",\"visibility\":\"public\",\"is_entry\":true,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"&signer\",\"address\",\"0x1::string::String\",\"0x1::string::String\",\"u64\",\"u64\",\"u64\",\"u64\",\"address\",\"0x1::string::String\"],\"return\":[]},{\"name\":\"transfer_escrow\",\"visibility\":\"public\",\"is_entry\":true,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"&signer\",\"address\",\"0x1::string::String\",\"0x1::string::String\",\"u64\",\"u64\",\"0xf6994988bd40261af9431cd6dd3fcf765569719e66322c7a05cc78a89cd366d4::FixedPriceMarket::MarketId<T0>\"],\"return\":[]},{\"name\":\"update_market\",\"visibility\":\"public\",\"is_entry\":true,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"&signer\",\"u64\",\"address\",\"0x1::string::String\"],\"return\":[]},{\"name\":\"withdraw_fee_to_payee\",\"visibility\":\"public\",\"is_entry\":false,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"&signer\",\"address\",\"0x1::string::String\"],\"return\":[]}],\"structs\":[{\"name\":\"ACLBox\",\"is_native\":false,\"abilities\":[\"copy\",\"drop\",\"store\",\"key\"],\"generic_type_params\":[],\"fields\":[{\"name\":\"box\",\"type\":\"0x1::acl::ACL\"}]},{\"name\":\"BuyTokenEvent\",\"is_native\":false,\"abilities\":[\"drop\",\"store\"],\"generic_type_params\":[{\"constraints\":[]}],\"fields\":[{\"name\":\"id\",\"type\":\"0xf6994988bd40261af9431cd6dd3fcf765569719e66322c7a05cc78a89cd366d4::FixedPriceMarket::MarketId<T0>\"},{\"name\":\"token_id\",\"type\":\"0x3::token::TokenId\"},{\"name\":\"token_amount\",\"type\":\"u64\"},{\"name\":\"buyer\",\"type\":\"address\"},{\"name\":\"token_owner\",\"type\":\"address\"},{\"name\":\"coin_per_token\",\"type\":\"u64\"}]},{\"name\":\"CancelListTokenEvent\",\"is_native\":false,\"abilities\":[\"drop\",\"store\"],\"generic_type_params\":[{\"constraints\":[]}],\"fields\":[{\"name\":\"id\",\"type\":\"0xf6994988bd40261af9431cd6dd3fcf765569719e66322c7a05cc78a89cd366d4::FixedPriceMarket::MarketId<T0>\"},{\"name\":\"token_id\",\"type\":\"0x3::token::TokenId\"},{\"name\":\"token_amount\",\"type\":\"u64\"}]},{\"name\":\"CreateMarketEvent\",\"is_native\":false,\"abilities\":[\"drop\",\"store\"],\"generic_type_params\":[{\"constraints\":[]}],\"fields\":[{\"name\":\"id\",\"type\":\"0xf6994988bd40261af9431cd6dd3fcf765569719e66322c7a05cc78a89cd366d4::FixedPriceMarket::MarketId<T0>\"},{\"name\":\"market_fee_point\",\"type\":\"u64\"},{\"name\":\"fee_payee\",\"type\":\"address\"}]},{\"name\":\"ListTokenEvent\",\"is_native\":false,\"abilities\":[\"drop\",\"store\"],\"generic_type_params\":[{\"constraints\":[]}],\"fields\":[{\"name\":\"id\",\"type\":\"0xf6994988bd40261af9431cd6dd3fcf765569719e66322c7a05cc78a89cd366d4::FixedPriceMarket::MarketId<T0>\"},{\"name\":\"token_id\",\"type\":\"0x3::token::TokenId\"},{\"name\":\"token_owner\",\"type\":\"address\"},{\"name\":\"token_amount\",\"type\":\"u64\"},{\"name\":\"coin_per_token\",\"type\":\"u64\"}]},{\"name\":\"MarketConfig\",\"is_native\":false,\"abilities\":[\"copy\",\"drop\",\"store\"],\"generic_type_params\":[{\"constraints\":[]}],\"fields\":[{\"name\":\"market_fee_point\",\"type\":\"u64\"},{\"name\":\"fee_payee\",\"type\":\"address\"}]},{\"name\":\"MarketId\",\"is_native\":false,\"abilities\":[\"copy\",\"drop\",\"store\"],\"generic_type_params\":[{\"constraints\":[]}],\"fields\":[{\"name\":\"market_address\",\"type\":\"address\"},{\"name\":\"name\",\"type\":\"0x1::string::String\"}]},{\"name\":\"MarketRecords\",\"is_native\":false,\"abilities\":[\"key\"],\"generic_type_params\":[{\"constraints\":[]}],\"fields\":[{\"name\":\"records\",\"type\":\"0x1::table::Table<0xf6994988bd40261af9431cd6dd3fcf765569719e66322c7a05cc78a89cd366d4::FixedPriceMarket::MarketId<T0>, 0xf6994988bd40261af9431cd6dd3fcf765569719e66322c7a05cc78a89cd366d4::FixedPriceMarket::MarketConfig<T0>>\"},{\"name\":\"create_market_events\",\"type\":\"0x1::event::EventHandle<0xf6994988bd40261af9431cd6dd3fcf765569719e66322c7a05cc78a89cd366d4::FixedPriceMarket::CreateMarketEvent<T0>>\"},{\"name\":\"list_token_events\",\"type\":\"0x1::event::EventHandle<0xf6994988bd40261af9431cd6dd3fcf765569719e66322c7a05cc78a89cd366d4::FixedPriceMarket::ListTokenEvent<T0>>\"},{\"name\":\"cancel_list_evnets\",\"type\":\"0x1::event::EventHandle<0xf6994988bd40261af9431cd6dd3fcf765569719e66322c7a05cc78a89cd366d4::FixedPriceMarket::CancelListTokenEvent<T0>>\"},{\"name\":\"buy_token_events\",\"type\":\"0x1::event::EventHandle<0xf6994988bd40261af9431cd6dd3fcf765569719e66322c7a05cc78a89cd366d4::FixedPriceMarket::BuyTokenEvent<T0>>\"}]},{\"name\":\"ResoureAccountCap\",\"is_native\":false,\"abilities\":[\"key\"],\"generic_type_params\":[],\"fields\":[{\"name\":\"cap\",\"type\":\"0x1::account::SignerCapability\"}]},{\"name\":\"Ticket\",\"is_native\":false,\"abilities\":[\"drop\",\"store\"],\"generic_type_params\":[{\"constraints\":[]}],\"fields\":[{\"name\":\"market\",\"type\":\"0xf6994988bd40261af9431cd6dd3fcf765569719e66322c7a05cc78a89cd366d4::FixedPriceMarket::MarketId<T0>\"},{\"name\":\"token_owner\",\"type\":\"address\"},{\"name\":\"coin_per_token\",\"type\":\"u64\"}]},{\"name\":\"TicketPack\",\"is_native\":false,\"abilities\":[\"key\"],\"generic_type_params\":[{\"constraints\":[]}],\"fields\":[{\"name\":\"tickets\",\"type\":\"0x1::table::Table<0x3::token::TokenId, 0xf6994988bd40261af9431cd6dd3fcf765569719e66322c7a05cc78a89cd366d4::FixedPriceMarket::Ticket<T0>>\"}]}]}},{\"bytecode\":\"0xa11ceb0b0500000008010008020812031a7c0496010e05a401980307bc04c30308ff07600cdf08a0080000010102020003010407000310070100010211070002170700000500010100000602010100000703010100000803010100000902010100000a040100000b05010100000c06010100000d07010100000e07010100000f08010002120f100003131112010003141301010003151601010003161801010002181a1b0002191c1000021a1d0100031b1e010100021c210100020f080100060d0c0d0d0d080d0e0d0f0d130d09060c0a050a08000a08000a030a030a030a050a08000008060c0a050a08000a08000a030a030a050a08000a060c0a050a08000a08000a030a030a030a030a050a080007060c050a050a08000a08000a030a0309060c050800080003030305080008060c050800080003030508000a060c05080008000303030305080002060c010a060306080006050303060506080006080006030603010501080001030109000b0608000605030306050b010109000608000608000603060308020405080008000301080202050800010b0101090004060c08020b01010900030b06030608000605030306030605060800060800060306030c06080006050303060306050b0101090006080006030608000603060309060c0508000800030303030b010109000a0608000605030306050b010109000608000608000603060307060c050800080003030b01010900090608000605030306080006030603080308020305080008000108030208030304060c0802050308060c05080008000303030b01010900020b010109000802030b010109000b01010900080201060c16466978656450726963654d61726b657453637269707406737472696e6705746f6b656e10466978656450726963654d61726b657406537472696e671062617463685f6275795f7363726970741862617463685f63616e63656c5f6c6973745f7363726970741962617463685f6368616e67655f70726963655f7363726970741162617463685f6c6973745f7363726970741562617463685f7472616e736665725f657363726f771562617463685f7472616e736665725f746f6b656e730a6275795f7363726970741263616e63656c5f6c6973745f736372697074136368616e67655f70726963655f7363726970740b6c6973745f736372697074166f70745f696e5f6469726563745f7472616e73666572084d61726b6574496407546f6b656e4964136372656174655f746f6b656e5f69645f726177146372656174655f6d61726b65745f69645f7261770b63616e63656c5f6c697374046c6973740f7472616e736665725f657363726f770b546f6b656e446174614964146372656174655f746f6b656e5f646174615f69640f6372656174655f746f6b656e5f6964087472616e736665720362757916696e697469616c697a655f746f6b656e5f73746f7265f6994988bd40261af9431cd6dd3fcf765569719e66322c7a05cc78a89cd366d4000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000030001040009440e01410a0c0d0600000000000000000c0c0a0c0a0d23030a05410e010a0c420a0c0b0e020a0c420b0c0a0e030a0c420b0c100e040a0c420c0c110e050a0c420c0c120e060a0c420c0c090e070a0c420a0c0e0e080a0c420b0c0f0a000b0b140b0a140b10140b11140b09140b12140b0e140b0f1438000b0c060100000000000000160c0c05050b000102010104000e440e01410a0c0b0600000000000000000c0a0a0a0a0b23030a05410e010a0a420a0c090e020a0a420b0c080e030a0a420b0c0f0e040a0a420c0c100e050a0a420c0c110e060a0a420a0c0c0e070a0a420b0c0e0b09140b08140b0f140b1014110b0c120b0c140b0e1438010c0d0a000b120b0d0b111438020b0a060100000000000000160c0a05050b00010202010400144a0e01410a0c0e0600000000000000000c0d0a0d0a0e23030a05470e010a0d420a0c0c0e020a0d420b0c0b0e030a0d420b0c120e040a0d420c0c130e050a0d420c0c140e060a0d420c0c0a0e070a0d420c0c0f0e080a0d420a0c100e090a0d420b0c110a000b0c140b0b140b12140b13140b14140b0a140b0f140b10140b111438030b0d060100000000000000160c0d05050b00010203010400154d0e01410a0c0d0600000000000000000c0c0a0c0a0d23030a054a0e010a0c420a0c0b0e020a0c420b0c0a0e030a0c420b0c130e040a0c420c0c140e050a0c420c0c150e060a0c420c0c120e070a0c420c0c0e0e080a0c420a0c0f0e090a0c420b0c110b0f140b111438010c100a000b0b140b0a140b13140b14140b15140b12140b0e140b1038040b0c060100000000000000160c0c05050b0001020401040017410e01410a0c0b0600000000000000000c0a0a0a0a0b23030a053e0e010a0a420a0c090e020a0a420b0c080e030a0a420b0c0f0e040a0a420c0c100e050a0a420c0c110e060a0a420a0c0c0e070a0a420b0c0e0b0c140b0e1438010c0d0a000b09140b08140b0f140b10140b11140b0d38050b0a060100000000000000160c0a05050b0001020501040019390e02410a0c0a0600000000000000000c090a090a0a23030a05360e020a09420a0c080e030a09420b0c070e040a09420b0c0b0e050a09420c0c0c0e060a09420c0c0d0b08140b07140b0b1411100c0e0b0e0b0c1411110c0f0a000b0f0a010b0d1411120b09060100000000000000160c0905050b00010206010400120e0b070b0838010c090b000b010b020b030b040b050b060b09380602070104001f100b010b020b030b04110b0c090b060b0738010c080b000b090b080b0538020208010400201e0a010a020a030a04110b0c0c0a080a0938010c0a0a000b0c0b0a0a0538020b080b0938010c0b0b000b010b020b030b040b050b060b070b0b38040209010400120f0b080b0938010c0a0b000b010b020b030b040b050b060b070b0a3804020a01040001060a0011140b000b0111150200\",\"abi\":{\"address\":\"0xf6994988bd40261af9431cd6dd3fcf765569719e66322c7a05cc78a89cd366d4\",\"name\":\"FixedPriceMarketScript\",\"friends\":[],\"exposed_functions\":[{\"name\":\"batch_buy_script\",\"visibility\":\"public\",\"is_entry\":true,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"&signer\",\"vector<address>\",\"vector<0x1::string::String>\",\"vector<0x1::string::String>\",\"vector<u64>\",\"vector<u64>\",\"vector<u64>\",\"vector<address>\",\"vector<0x1::string::String>\"],\"return\":[]},{\"name\":\"batch_cancel_list_script\",\"visibility\":\"public\",\"is_entry\":true,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"&signer\",\"vector<address>\",\"vector<0x1::string::String>\",\"vector<0x1::string::String>\",\"vector<u64>\",\"vector<u64>\",\"vector<address>\",\"vector<0x1::string::String>\"],\"return\":[]},{\"name\":\"batch_change_price_script\",\"visibility\":\"public\",\"is_entry\":true,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"&signer\",\"vector<address>\",\"vector<0x1::string::String>\",\"vector<0x1::string::String>\",\"vector<u64>\",\"vector<u64>\",\"vector<u64>\",\"vector<u64>\",\"vector<address>\",\"vector<0x1::string::String>\"],\"return\":[]},{\"name\":\"batch_list_script\",\"visibility\":\"public\",\"is_entry\":true,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"&signer\",\"vector<address>\",\"vector<0x1::string::String>\",\"vector<0x1::string::String>\",\"vector<u64>\",\"vector<u64>\",\"vector<u64>\",\"vector<u64>\",\"vector<address>\",\"vector<0x1::string::String>\"],\"return\":[]},{\"name\":\"batch_transfer_escrow\",\"visibility\":\"public\",\"is_entry\":true,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"&signer\",\"vector<address>\",\"vector<0x1::string::String>\",\"vector<0x1::string::String>\",\"vector<u64>\",\"vector<u64>\",\"vector<address>\",\"vector<0x1::string::String>\"],\"return\":[]},{\"name\":\"batch_transfer_tokens\",\"visibility\":\"public\",\"is_entry\":true,\"generic_type_params\":[],\"params\":[\"&signer\",\"address\",\"vector<address>\",\"vector<0x1::string::String>\",\"vector<0x1::string::String>\",\"vector<u64>\",\"vector<u64>\"],\"return\":[]},{\"name\":\"buy_script\",\"visibility\":\"public\",\"is_entry\":true,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"&signer\",\"address\",\"0x1::string::String\",\"0x1::string::String\",\"u64\",\"u64\",\"u64\",\"address\",\"0x1::string::String\"],\"return\":[]},{\"name\":\"cancel_list_script\",\"visibility\":\"public\",\"is_entry\":true,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"&signer\",\"address\",\"0x1::string::String\",\"0x1::string::String\",\"u64\",\"u64\",\"address\",\"0x1::string::String\"],\"return\":[]},{\"name\":\"change_price_script\",\"visibility\":\"public\",\"is_entry\":true,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"&signer\",\"address\",\"0x1::string::String\",\"0x1::string::String\",\"u64\",\"u64\",\"u64\",\"u64\",\"address\",\"0x1::string::String\"],\"return\":[]},{\"name\":\"list_script\",\"visibility\":\"public\",\"is_entry\":true,\"generic_type_params\":[{\"constraints\":[]}],\"params\":[\"&signer\",\"address\",\"0x1::string::String\",\"0x1::string::String\",\"u64\",\"u64\",\"u64\",\"u64\",\"address\",\"0x1::string::String\"],\"return\":[]},{\"name\":\"opt_in_direct_transfer\",\"visibility\":\"public\",\"is_entry\":true,\"generic_type_params\":[],\"params\":[\"&signer\",\"bool\"],\"return\":[]}],\"structs\":[]}}]"
	abiPayload2, err := PayloadFromJsonAndAbi(payload2, abi2)
	require.Nil(t, err)
	bytes, err := abiPayload2.BcsSerialize()
	require.Nil(t, err)
	t.Log("payload : ", hex.EncodeToString(bytes))
}

func TestConvertArgs(t *testing.T) {
	args := make([]interface{}, 0)
	types := make([]MoveType, 0)

	arrayNumber := make([]interface{}, 0)
	arrayNumber = append(arrayNumber, 1)
	arrayNumber = append(arrayNumber, 2)

	arrayBool := make([]interface{}, 0)
	arrayBool = append(arrayBool, "true")
	arrayBool = append(arrayBool, "false")

	arrayAddress := make([]interface{}, 0)
	arrayAddress = append(arrayAddress, "0x2ba03b661d7691b41053dcf293caff2c17283b19cb4abe866b4855e8f6683771")
	arrayAddress = append(arrayAddress, "0x2ba03b661d7691b41053dcf293caff2c17283b19cb4abe866b4855e8f6683771")

	arrayString := make([]interface{}, 0)
	arrayString = append(arrayString, "test1")
	arrayString = append(arrayString, "test2")

	args = append(args, "0x2ba03b661d7691b41053dcf293caff2c17283b19cb4abe866b4855e8f6683771")
	args = append(args, "1")
	args = append(args, "1")
	args = append(args, "true")
	args = append(args, "1")
	args = append(args, "0x2ba03b661d7691b41053dcf293caff2c17283b19cb4abe866b4855e8f6683771")
	args = append(args, arrayNumber)
	arrayNumber = nil
	arrayNumber = append(arrayNumber, "1")
	arrayNumber = append(arrayNumber, "2")
	args = append(args, arrayNumber)
	args = append(args, arrayNumber)
	args = append(args, arrayBool)
	args = append(args, arrayAddress)
	args = append(args, arrayString)
	args = append(args, "test")

	types = append(types, "address")
	types = append(types, "u64")
	types = append(types, "u8")
	types = append(types, "bool")
	types = append(types, "u128")
	types = append(types, "vector<u8>")
	types = append(types, "vector<u8>")
	types = append(types, "vector<u64>")
	types = append(types, "vector<u128>")
	types = append(types, "vector<bool>")
	types = append(types, "vector<address>")
	types = append(types, "vector<0x1::string::String>")
	types = append(types, "0x1::string::String")
	b, err := ConvertArgs(args, types)
	require.Nil(t, err)
	for _, bytes := range b {
		t.Log(hex.EncodeToString(bytes))
	}
}

func TestU128(t *testing.T) {
	s, err := Interface2U128("123456789013454364576576")
	require.Nil(t, err)
	bytes, _ := types.BcsSerializeU128(*s)
	t.Log(hex.EncodeToString(bytes))
}

func TestU128Hex(t *testing.T) {
	s, err := String2U128("0x12345678123456781234567812345678")
	require.Nil(t, err)
	bytes, _ := types.BcsSerializeU128(*s)
	t.Log(hex.EncodeToString(bytes))
	cc, err := strconv.ParseUint("12", 0, 64)
	require.Nil(t, err)
	t.Log(cc)
}

func TestSimulateTransaction(t *testing.T) {
	from := "0xedc4410aa38b512e3173fcd1e119abb13872d6928dce0842664ad6ada1ccd28"
	sequenceNumber := 11
	maxGasAmount := 0
	gasUnitPrice := 100
	expirationTimestampSecs := time.Now().Unix() + 300
	chainId := 2
	seedHex := "1790962db820729606cd7b255ace1ac5ebb129ac8e9b2d8534d022194ab25b37"
	payload := "{\"arguments\":[100000,1148684056.1,[3],[1148684056],[false]],\"function\":\"0x909adaa9f5756559b789db81c9ae0553683c060ca3537cdcb8fd2e5629583491::aggregator::unxswap\",\"type\":\"entry_function_payload\",\"type_arguments\":[\"0x1::aptos_coin::AptosCoin\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x1::aptos_coin::AptosCoin\",\"0x1::aptos_coin::AptosCoin\",\"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\",\"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\",\"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\"]}"
	abi := "[\n {\n \"abi\": {\n \"address\": \"0x909adaa9f5756559b789db81c9ae0553683c060ca3537cdcb8fd2e5629583491\",\n \"name\": \"aggregator\",\n \"friends\": [],\n \"exposed_functions\": [ \n {\n \"name\": \"unxswap\",\n \"visibility\": \"public\",\n \"is_entry\": true,\n \"generic_type_params\": [\n {\n \"constraints\": []\n },\n {\n \"constraints\": []\n },\n {\n \"constraints\": []\n },\n {\n \"constraints\": []\n },\n {\n \"constraints\": []\n },\n {\n \"constraints\": []\n },\n {\n \"constraints\": []\n }\n ],\n \"params\": [\n \"&signer\",\n \"u64\",\n \"u64\",\n \"vector<u8>\",\n \"vector<u64>\",\n \"vector<bool>\"\n ],\n \"return\": []\n }\n ],\n \"structs\": [\n ]\n }\n }\n]"
	p, err := PayloadFromJsonAndAbi(payload, abi)
	require.Nil(t, err)
	raw := MakeRawTransaction(from, uint64(sequenceNumber), uint64(maxGasAmount), uint64(gasUnitPrice), uint64(expirationTimestampSecs), uint8(chainId), p)
	tx, err := SimulateTransaction(raw, seedHex)
	require.Nil(t, err)
	t.Log("tx : ", tx)
}

func TestTransferSign(t *testing.T) {
	from := "0xffb6fac50e85d7c6ae1b13347fac94c819bf68b1b45ae612a5d51e264e0a27fe"
	to := "0xd6d64011d498462e065d0c85648cb357e2f1c9df37d9179755ddf89c1e830c77"
	amount := 1000
	sequenceNumber := 18
	maxGasAmount := 10000
	gasUnitPrice := 100
	expirationTimestampSecs := time.Now().Unix() + 300
	chainId := 2
	seedHex := "1790962db820729606cd7b255ace1ac5ebb129ac8e9b2d8534d022194ab25b37"
	data, err := Transfer(from, uint64(sequenceNumber), uint64(maxGasAmount), uint64(gasUnitPrice), uint64(expirationTimestampSecs), uint8(chainId),
		to, uint64(amount), seedHex)
	assert.Nil(t, err)
	fmt.Println(data)

}

func TestAddStake(t *testing.T) {
	from := "0xffb6fac50e85d7c6ae1b13347fac94c819bf68b1b45ae612a5d51e264e0a27fe"
	poolAddress := "0xb1a373b3eddb7a715a807709a36b18aca67a005885b16476b6a5ebd5c25e14b5"
	//poolAddress := "0xfd47a2fb988c959839ea2fe4d7169b48536a42bf5e4933790701a08252ba2039"
	amount := 2000000000
	sequenceNumber := 59
	maxGasAmount := 10000
	gasUnitPrice := 100
	expirationTimestampSecs := time.Now().Unix() + 300
	chainId := 2
	seedHex := "1790962db820729606cd7b255ace1ac5ebb129ac8e9b2d8534d022194ab25b37"
	data, err := AddStake(from, uint64(sequenceNumber), uint64(maxGasAmount), uint64(gasUnitPrice), uint64(expirationTimestampSecs), uint8(chainId),
		poolAddress, uint64(amount), seedHex)
	assert.Nil(t, err)
	t.Log("tx : ", data)

}

func TestUnlock(t *testing.T) {
	from := "0xffb6fac50e85d7c6ae1b13347fac94c819bf68b1b45ae612a5d51e264e0a27fe"
	poolAddress := "0xb1a373b3eddb7a715a807709a36b18aca67a005885b16476b6a5ebd5c25e14b5"
	//poolAddress := "0xfd47a2fb988c959839ea2fe4d7169b48536a42bf5e4933790701a08252ba2039"
	amount := 300000000
	sequenceNumber := 55
	maxGasAmount := 10000
	gasUnitPrice := 100
	expirationTimestampSecs := time.Now().Unix() + 300
	chainId := 2
	seedHex := "1790962db820729606cd7b255ace1ac5ebb129ac8e9b2d8534d022194ab25b37"
	data, err := Unlock(from, uint64(sequenceNumber), uint64(maxGasAmount), uint64(gasUnitPrice), uint64(expirationTimestampSecs), uint8(chainId),
		poolAddress, uint64(amount), seedHex)
	assert.Nil(t, err)
	t.Log("tx : ", data)
}

func TestReactivateStake(t *testing.T) {
	from := "0xffb6fac50e85d7c6ae1b13347fac94c819bf68b1b45ae612a5d51e264e0a27fe"
	poolAddress := "0xb1a373b3eddb7a715a807709a36b18aca67a005885b16476b6a5ebd5c25e14b5"
	//poolAddress := "0xfd47a2fb988c959839ea2fe4d7169b48536a42bf5e4933790701a08252ba2039"
	amount := 1500000000
	sequenceNumber := 42
	maxGasAmount := 10000
	gasUnitPrice := 100
	expirationTimestampSecs := time.Now().Unix() + 300
	chainId := 2
	seedHex := "1790962db820729606cd7b255ace1ac5ebb129ac8e9b2d8534d022194ab25b37"
	data, err := ReactivateStake(from, uint64(sequenceNumber), uint64(maxGasAmount), uint64(gasUnitPrice), uint64(expirationTimestampSecs), uint8(chainId),
		poolAddress, uint64(amount), seedHex)
	assert.Nil(t, err)
	t.Log("tx : ", data)
}

func TestWithdraw(t *testing.T) {
	from := "0xffb6fac50e85d7c6ae1b13347fac94c819bf68b1b45ae612a5d51e264e0a27fe"
	poolAddress := "0xb1a373b3eddb7a715a807709a36b18aca67a005885b16476b6a5ebd5c25e14b5"
	//poolAddress := "0xfd47a2fb988c959839ea2fe4d7169b48536a42bf5e4933790701a08252ba2039"
	amount := 20224
	sequenceNumber := 58
	maxGasAmount := 10000
	gasUnitPrice := 100
	expirationTimestampSecs := time.Now().Unix() + 300
	chainId := 2
	seedHex := "1790962db820729606cd7b255ace1ac5ebb129ac8e9b2d8534d022194ab25b37"
	data, err := Withdraw(from, uint64(sequenceNumber), uint64(maxGasAmount), uint64(gasUnitPrice), uint64(expirationTimestampSecs), uint8(chainId),
		poolAddress, uint64(amount), seedHex)
	assert.Nil(t, err)
	t.Log("tx : ", data)
}

func TestGetPubKey(t *testing.T) {
	publicKey, err := ed25519.PublicKeyFromSeed("1790962db820729606cd7b255ace1ac5ebb129ac8e9b2d8534d022194ab25b37")
	assert.Nil(t, err)
	fmt.Println(hex.EncodeToString(publicKey))
	//61f579fc779146304353027b425a216d8015889c5f3b715ad26135b862f3bf84

	b, err := hex.DecodeString("1790962db820729606cd7b255ace1ac5ebb129ac8e9b2d8534d022194ab25b37")
	assert.Nil(t, err)
	sig, err := ed25519.Sign("c9c44cf555856d4c619d35daa1fe421c053234df8badabe4dce9d46aa923ec4f", b)
	assert.Nil(t, err)
	fmt.Println(hex.EncodeToString(sig))
}
